{"version":3,"sources":["components/weather/WeatherIcons.js","components/weather/CurrentWeather.jsx","store.js","components/weather/daily/DailyWeatherDetail.jsx","components/weather/daily/DailyWeather.jsx","components/weather/hourly/HourlyWeatherDetail.jsx","components/weather/hourly/HourlyWeather.jsx","components/weather/Weather.jsx","components/aurora/GenerateTime.jsx","components/aurora/Aurora.jsx","routes/Forecast.jsx","fbInstance.jsx","routes/Auth.jsx","assets/mapStyles.jsx","components/Marker.jsx","routes/BestLocations.jsx","routes/AuroraMap.jsx","routes/AuroraMaxLive.jsx","components/Header.jsx","components/Navigation.jsx","routes/AuroraMaxReplay.jsx","components/Router.jsx","components/Footer.jsx","components/App.jsx","index.jsx"],"names":["weatherIconDay","Thunderstorm","size","color","Drizzle","Rain","Snow","Tornado","Clear","Mist","Smoke","Haze","Dust","Ash","Squall","Clouds","weatherIconNight","CurrentWeather","currWeather","offset","utc","useState","Date","sunrise","setSunrise","sunset","setSunset","dt","localTime","setLocalTime","clouds","setClouds","feels_like","windChill","setWindChill","humidity","setHumidity","pressure","setPressure","temp","setTemp","weather","setWeather","useEffect","className","Row","Col","main","Math","round","exp","description","firstLetter","substring","restLetter","toUpperCase","Label","getHours","getMinutes","moment","format","getDate","getFullYear","data","createSlice","name","initialState","page","timezone","reducers","add","state","action","payload","setOffset","setTimeZone","actions","configureStore","reducer","DailyWeatherDetail","React","memo","daily","timezone_offset","getTimezoneOffset","dateFormat","max","min","DailyWeather","dailyWeather","time","setTime","zone","setZone","dispatch","useDispatch","arr","i","length","console","log","nextSevenDays","map","detail","HourlyWeatherDetail","hweather","setHWeather","getMonth","id","HourlyWeather","hourlyWeather","nextFiveHours","Weather","location","setUTC","getWeather","a","axios","get","lat","lng","process","getUTCTime","timeNow","utcTime","getTime","current","hourly","GenerateTime","utcPeriod","setUtcPeriod","localPeriod","setLocalPeriod","value","setValue","setColor","useSelector","stadardOffset","start","utcStart","parse","utcEnd","end","style","colour","periodUtc","periodLocal","generateTime","now","Aurora","info","setInfo","probability","setProbability","firstday","setFirstday","secondDay","setSecondDay","thirdDay","setThirdDay","middleLatitude","setMiddleLatitude","highLatitude","setHighLatitude","getAuroraForecast","latitude","longitude","values","calculated","getThreeday","getHighestNowcast","threeday","arr0","arr1","arr2","forEach","element","index","Error","chunkDataIdx","indexOf","chunkData","slice","activeM","minorM","severeM","activeH","minorH","severeH","highLat","needleHeightRatio","needleColor","maxValue","customSegmentStops","segmentColors","minValue","parseInt","bz","width","height","parseFloat","density","speed","segments","kp","kp1hour","kp4hour","first","second","third","Forecast","position","setLocation","city","setCity","resetValue","useRef","OPEN_CAGE_API","getCityLocation","toLowerCase","results","find","result","components","geometry","alert","getCityName","Form","onSubmit","e","preventDefault","icon","faMapMarkerAlt","Input","onChange","target","placeholder","innerRef","Button","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","initializeApp","firebaseInstance","authService","auth","Auth","firestore","storage","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","sm","md","Card","CardHeader","CardBody","Alert","FormGroup","for","type","required","block","onClick","CardFooter","styles","featureType","elementType","stylers","gamma","lightness","weight","saturation","visibility","Marker","text","visiable","setVisiable","onMouseEnter","onMouseLeave","faMapPin","BestLocations","center","arrayLocation","getBestLocations","locations","Object","keys","place","long","marginTop","bootstrapURLKeys","key","libraries","defaultCenter","defaultZoom","options","mapStyles","AuroraMap","aurora","setAurora","AnyReactComponent","getAuroraMap","coordinates","filter","heatmapData","positions","radius","opacity","heatmap","AuroraMaxLive","img","setImage","setInterval","d","getAuroraMaxLive","clearInterval","alt","src","Header","Navigation","isLoggedIn","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","history","useHistory","mouseOn","prevState","Navbar","dark","expand","Container","to","fontWeight","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Dropdown","nav","DropdownToggle","caret","DropdownMenu","DropdownItem","signOut","push","AuroraMaxReplay","video","setVideo","lastDay","setLastDay","getVideo","year","month","day","now_date","currentYear","currentMonth","currentDay","some","lastDate","initialVideo","chooseDate","fontSize","AppRouter","withProps","Component","props","matchProps","path","exact","component","Footer","App","init","setInit","setIsLoggedIn","currLocation","setCurrLocation","onAuthStateChanged","user","navigator","geolocation","getCurrentPosition","coords","currentLocation","backgroundColor","ReactDOM","render","store","document","getElementById"],"mappings":"2WAqBaA,EAAiB,CAC5BC,aAAc,cAAC,IAAD,CAAmBC,KAAM,GAAIC,MAAM,UACjDC,QAAS,cAAC,IAAD,CAAcF,KAAM,GAAIC,MAAM,UACvCE,KAAM,cAAC,IAAD,CAAWH,KAAM,GAAIC,MAAM,UACjCG,KAAM,cAAC,IAAD,CAAWJ,KAAM,GAAIC,MAAM,UACjCI,QAAS,cAAC,IAAD,CAAWL,KAAM,GAAIC,MAAM,UACpCK,MAAO,cAAC,IAAD,CAAYN,KAAM,GAAIC,MAAM,UACnCM,KAAM,cAAC,IAAD,CAAOP,KAAM,GAAIC,MAAM,UAC7BO,MAAO,cAAC,IAAD,CAASR,KAAM,GAAIC,MAAM,UAChCQ,KAAM,cAAC,IAAD,CAAUT,KAAM,GAAIC,MAAM,UAChCS,KAAM,cAAC,IAAD,CAAQV,KAAM,GAAIC,MAAM,UAC9BU,IAAK,cAAC,IAAD,CAAQX,KAAM,GAAIC,MAAM,UAC7BW,OAAQ,cAAC,IAAD,CAAmBZ,KAAM,GAAIC,MAAM,UAC3CY,OAAQ,cAAC,IAAD,CAAUb,KAAM,GAAIC,MAAM,WAGvBa,EAAmB,CAC9Bf,aAAc,cAAC,IAAD,CAAwBC,KAAM,GAAIC,MAAM,UACtDC,QAAS,cAAC,IAAD,CAAmBF,KAAM,GAAIC,MAAM,UAC5CE,KAAM,cAAC,IAAD,CAAgBH,KAAM,GAAIC,MAAM,UACtCG,KAAM,cAAC,IAAD,CAAgBJ,KAAM,GAAIC,MAAM,UACtCI,QAAS,cAAC,IAAD,CAAWL,KAAM,GAAIC,MAAM,UACpCK,MAAO,cAAC,IAAD,CAAcN,KAAM,GAAIC,MAAM,UACrCM,KAAM,cAAC,IAAD,CAAOP,KAAM,GAAIC,MAAM,UAC7BO,MAAO,cAAC,IAAD,CAASR,KAAM,GAAIC,MAAM,UAChCQ,KAAM,cAAC,IAAD,CAAYT,KAAM,GAAIC,MAAM,UAClCS,KAAM,cAAC,IAAD,CAAQV,KAAM,GAAIC,MAAM,UAC9BU,IAAK,cAAC,IAAD,CAAQX,KAAM,GAAIC,MAAM,UAC7BW,OAAQ,cAAC,IAAD,CAAwBZ,KAAM,GAAIC,MAAM,UAChDY,OAAQ,cAAC,IAAD,CAAkBb,KAAM,GAAIC,MAAM,WCiF7Bc,EA9HQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAAU,EACzBC,mBAAS,IAAIC,KAA2B,IAAtBJ,EAAYK,UADL,mBAChDA,EADgD,KACvCC,EADuC,OAE3BH,mBAAS,IAAIC,KAA0B,IAArBJ,EAAYO,SAFH,mBAEhDA,EAFgD,KAExCC,EAFwC,OAGrBL,mBAAS,IAAIC,KAAsB,IAAjBJ,EAAYS,KAHT,mBAGhDC,EAHgD,KAGrCC,EAHqC,OAI3BR,mBAASH,EAAYY,QAJM,mBAIhDA,EAJgD,KAIxCC,EAJwC,OAKrBV,mBAASH,EAAYc,YALA,mBAKhDC,EALgD,KAKrCC,EALqC,OAMvBb,mBAASH,EAAYiB,UANE,mBAMhDA,EANgD,KAMtCC,EANsC,OAOvBf,mBAASH,EAAYmB,UAPE,mBAOhDA,EAPgD,KAOtCC,EAPsC,OAQ/BjB,mBAASH,EAAYqB,MARU,mBAQhDA,EARgD,KAQ1CC,EAR0C,OASzBnB,mBAASH,EAAYuB,SATI,mBAShDA,EATgD,KASvCC,EATuC,KAqCvD,OAHAC,qBAAU,WAtBRnB,EACE,IAAIF,KAAKF,EAAwD,KAAjDD,EAASD,EAAYK,QAAUL,EAAYS,MAE7DD,EACE,IAAIJ,KAAKF,EAAuD,KAAhDD,EAASD,EAAYO,OAASP,EAAYS,MAE5DE,EAAa,IAAIP,KAAKF,EAAe,IAATD,IAC5BY,EAAUb,EAAYY,QACtBI,EAAahB,EAAYc,YACzBI,EAAYlB,EAAYiB,UACxBG,EAAYpB,EAAYmB,UACxBG,EAAQtB,EAAYqB,MACpBG,EAAWxB,EAAYuB,WAYtB,CAACvB,IAEF,qCACE,iDACA,sBAAK0B,UAAU,eAAf,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKF,UAAU,YAAf,SACG1B,EAAYO,OAASP,EAAYS,IAClCT,EAAYK,QAAUL,EAAYS,GAC9B3B,EAAeyC,EAAQ,GAAGM,MAC1B/B,EAAiByB,EAAQ,GAAGM,QAElC,eAACD,EAAA,EAAD,CAAKF,UAAU,YAAf,UAA4BI,KAAKC,MAAMV,GAAvC,cAEF,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKF,UAAU,mBAAf,SAxBY,WAClB,IAAMM,EAAMT,EAAQ,GAAGU,YACjBC,EAAcF,EAAIG,UAAU,EAAG,GAC/BC,EAAaJ,EAAIG,UAAU,GACjC,MAAM,GAAN,OAAUD,EAAYG,eAAtB,OAAsCD,GAoBGH,OAErC,eAACN,EAAA,EAAD,CAAKD,UAAU,YAAf,UACE,eAACE,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,4BAEF,eAACV,EAAA,EAAD,CAAKF,UAAU,YAAf,UAA4Bd,EAA5B,UAEF,eAACe,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,yBAEF,eAACV,EAAA,EAAD,CAAKF,UAAU,YAAf,UAA4BT,EAA5B,UAEF,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,wBAEF,eAACV,EAAA,EAAD,CAAKF,UAAU,YAAf,UACGrB,EAAQkC,WAAa,GAArB,WACOlC,EAAQkC,YACZlC,EAAQkC,WAHd,IAKGlC,EAAQmC,aAAe,GAAvB,WACOnC,EAAQmC,cACZnC,EAAQmC,sBAIlB,eAACZ,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,yBAEF,eAACV,EAAA,EAAD,CAAKF,UAAU,YAAf,UAA4BI,KAAKC,MAAMhB,GAAvC,cAEF,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,yBAEF,eAACV,EAAA,EAAD,CAAKF,UAAU,YAAf,UAA4BP,EAA5B,aAEF,eAACQ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,uBAEF,eAACV,EAAA,EAAD,CAAKF,UAAU,YAAf,UACGnB,EAAOgC,WADV,IAEGhC,EAAOiC,aAAe,GAAtB,WACOjC,EAAOiC,cACXjC,EAAOiC,yBAKnB,cAACb,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKF,UAAU,aAAf,UACE,cAACY,EAAA,EAAD,4BADF,IACgCG,MAASC,OAAO,OADhD,OAEShC,EAAUiC,UAFnB,OAEoCjC,EAAUkC,cAF9C,QAGGlC,EAAU6B,WAAa,GAAvB,WACO7B,EAAU6B,YACd7B,EAAU6B,WALhB,IAOG7B,EAAU8B,aAAe,GAAzB,WACO9B,EAAU8B,cACd9B,EAAU8B,yB,wBCzHpBK,EAAOC,YAAY,CACvBC,KAAM,cACNC,aAAc,CAAEC,KAAM,GAAIhD,OAAQ,EAAGiD,SAAU,IAC/CC,SAAU,CACRC,IAAK,SAACC,EAAOC,GACXD,EAAMJ,KAAOK,EAAOC,SAEtBC,UAAW,SAACH,EAAOC,GACjBD,EAAMpD,OAASqD,EAAOC,SAKxBE,YAAa,SAACJ,EAAOC,GACnBD,EAAMH,SAAWI,EAAOC,Y,EAKiBV,EAAKa,QAArCN,E,EAAAA,IAAKI,E,EAAAA,UAAWC,E,EAAAA,YAEhBE,cAAe,CAAEC,QAASf,EAAKe,U,iBCqC/BC,EAvDYC,IAAMC,MAAK,YAAwB,IAArBC,EAAoB,EAApBA,MAAO/D,EAAa,EAAbA,OAAa,EAE7BE,mBAAS6D,GAFoB,mBAEpDzC,EAFoD,KAE3CC,EAF2C,KAWrDyC,EAAmD,IAAjC,IAAI7D,MAAO8D,oBAKnC,OAHAzC,qBAAU,WACRD,EAAWwC,KACV,CAACA,IAEF,mCACE,gCACE,qBAAKtC,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,UACGwC,IACC,IAAI/D,KAA+C,KAAzCmB,EAAQd,GAAKR,EAASgE,IAChC,WAIN,qBAAKvC,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,UACGwC,IACC,IAAI/D,KAA+C,KAAzCmB,EAAQd,GAAKR,EAASgE,IAChC,aAKN,qBAAKvC,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,UAAM7C,EAAeyC,EAAQA,QAAQ,GAAGM,UAG1C,sBAAKH,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACE,eAACC,EAAA,EAAD,WACGG,KAAKC,MAAMR,EAAQF,KAAK+C,KAD3B,UACqCtC,KAAKC,MAAMR,EAAQF,KAAKgD,KAD7D,aAIF,qBAAK3C,UAAU,oBAAf,SACE,cAACC,EAAA,EAAD,UA3CU,WAClB,IAAMK,EAAMT,EAAQA,QAAQ,GAAGU,YACzBC,EAAcF,EAAIG,UAAU,EAAG,GAC/BC,EAAaJ,EAAIG,UAAU,GACjC,MAAM,GAAN,OAAUD,EAAYG,eAAtB,OAAsCD,GAuCxBH,kBCJHqC,EA1CMR,IAAMC,MAAK,YAAyC,IAAtCQ,EAAqC,EAArCA,aAActE,EAAuB,EAAvBA,OAAQiD,EAAe,EAAfA,SAAe,EACxC/C,mBAAS,IAD+B,mBAC/DoB,EAD+D,KACtDC,EADsD,OAE9CrB,mBAASF,GAFqC,mBAE/DuE,EAF+D,KAEzDC,EAFyD,OAG9CtE,mBAAS+C,GAHqC,mBAG/DwB,EAH+D,KAGzDC,EAHyD,KAKhEC,EAAWC,cAmBjB,OANAD,EAASpB,EAAUgB,IACnBI,EAASnB,EAAYiB,IAErBjD,qBAAU,YAdY,WAEpB,IADA,IAAIqD,EAAM,GACDC,EAAI,EAAGA,EAAIR,EAAaS,OAAQD,IACvCD,EAAG,sBAAOA,GAAP,CAAYP,EAAaQ,KAE9BvD,EAAWsD,GACXL,EAAQxE,GACR0E,EAAQzB,GACR+B,QAAQC,IAAIjF,EAAQ,yCAOpBkF,KACC,CAACZ,IAEF,qCACE,gDACA,cAAC5C,EAAA,EAAD,UACGJ,EAAQ6D,KAAI,SAAAC,GAAM,OACjB,cAACzD,EAAA,EAAD,CAAKF,UAAU,gBAAf,SACE,cAAC,EAAD,CAEEsC,MAAOqB,EACPpF,OAAQA,GAFHoF,EAAO5E,iBCqCX6E,EAtEa,SAAC,GAA0C,IAAxC/D,EAAuC,EAAvCA,QAASlB,EAA8B,EAA9BA,QAASE,EAAqB,EAArBA,OAAQN,EAAa,EAAbA,OAAa,EACpCE,mBAASoB,EAAQA,QAAQ,IADW,mBAC7DgE,EAD6D,KACnDC,EADmD,KAU9DvB,EAAmD,IAAjC,IAAI7D,MAAO8D,oBAMnC,OAJAzC,qBAAU,WACR+D,EAAYjE,EAAQA,QAAQ,MAC3B,CAACA,IAGF,mCACE,eAACI,EAAA,EAAD,WACE,qBAAKD,UAAU,cAAf,SACE,8BACE,eAACE,EAAA,EAAD,WACG,IAAIxB,KACuC,KAAzCmB,EAAQd,GAAKR,EAASgE,IACvBwB,WAAa,EAHjB,IAKG,IAAIrF,KACuC,KAAzCmB,EAAQd,GAAKR,EAASgE,IACvBtB,UAPJ,OASG,IAAIvC,KACuC,KAAzCmB,EAAQd,GAAKR,EAASgE,IACvB1B,WAAa,GAFd,WAGO,IAAInC,KACoC,KAAzCmB,EAAQd,GAAKR,EAASgE,IACvB1B,YACF,IAAInC,KACwC,KAAzCmB,EAAQd,GAAKR,EAASgE,IACvB1B,WAjBR,aAuBJ,cAACX,EAAA,EAAD,CAAK8D,GAAG,cAAR,SACGnF,EAASgB,EAAQd,IAAMJ,EAAUkB,EAAQd,GACtC3B,EAAeyC,EAAQA,QAAQ,GAAGM,MAClC/B,EAAiByB,EAAQA,QAAQ,GAAGM,QAE1C,qBAAKH,UAAU,cAAf,SACE,8BACE,eAACE,EAAA,EAAD,CAAKF,UAAU,GAAf,UAAmBI,KAAKC,MAAMR,EAAQF,MAAtC,eAIJ,qBAAKK,UAAU,mBAAf,SACE,8BACE,eAACE,EAAA,EAAD,2BAAoBE,KAAKC,MAAMR,EAAQT,YAAvC,eAGJ,qBAAKY,UAAU,qBAAf,SACE,8BACE,cAACE,EAAA,EAAD,UA3DU,WAClB,IAAMI,EAAMuD,EAAStD,YACfC,EAAcF,EAAIG,UAAU,EAAG,GAC/BC,EAAaJ,EAAIG,UAAU,GACjC,MAAM,GAAN,OAAUD,EAAYG,eAAtB,OAAsCD,GAuDxBH,eChCH0D,EA/BO,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,cAAevF,EAA8B,EAA9BA,QAASE,EAAqB,EAArBA,OAAQN,EAAa,EAAbA,OAAa,EACtCE,mBAAS,IAD6B,mBAC7DoB,EAD6D,KACpDC,EADoD,KAepE,OAJAC,qBAAU,YARY,WAEpB,IADA,IAAIqD,EAAM,GACDC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAG,sBAAOA,GAAP,CAAYc,EAAcb,KAE/BvD,EAAWsD,GAIXe,KACC,CAACD,IAGF,qCACE,gDACCrE,EAAQ6D,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CAEE9D,QAAS8D,EACThF,QAASA,EACTE,OAAQA,EACRN,OAAQA,GAJHoF,EAAO5E,WCqDPqF,EArEChC,IAAMC,MAAK,YAAmB,IAAhBgC,EAAe,EAAfA,SAAe,EACb5F,qBADa,mBACpCoB,EADoC,KAC3BC,EAD2B,OAErBrB,qBAFqB,mBAEpCD,EAFoC,KAE/B8F,EAF+B,KAK3Cf,QAAQC,IAAIa,EAAU,iBAEtB,IAAME,EAAU,uCAAG,4BAAAC,EAAA,sEACEC,IAAMC,IAAN,8DACsCL,EAASM,IAD/C,gBAC0DN,EAASO,IADnE,gDAJGC,qCAGL,OACX1D,EADW,OAIjB2D,IACAhF,EAAWqB,EAAKA,MALC,2CAAH,qDAQV2D,EAAa,WACjB,IAAMC,EAAU,IAAIrG,KACdsG,EAAUD,EAAQE,UAA0C,GAA9BF,EAAQvC,oBAA2B,IACvE8B,EAAOU,IAST,OANAzB,QAAQC,IAAI,+BAAiB3D,GAE7BE,qBAAU,WACRwE,MACC,CAACF,IAGF,mCACGxE,EACC,mCACE,sBAAKG,UAAU,UAAf,UACE,kDACA,eAACC,EAAA,EAAD,CAAKD,UAAU,kBAAf,UACE,cAACE,EAAA,EAAD,CAAKF,UAAU,mBAAf,SACE,cAAC,EAAD,CACE1B,YAAauB,EAAQqF,QACrB3G,OAAQsB,EAAQ0C,gBAChB/D,IAAKA,MAGT,cAAC0B,EAAA,EAAD,CAAKF,UAAU,SAAf,SACE,cAAC,EAAD,CACEkE,cAAerE,EAAQsF,OACvBxG,QAASkB,EAAQqF,QAAQvG,QACzBE,OAAQgB,EAAQqF,QAAQrG,OACxBN,OAAQsB,EAAQ0C,uBAItB,cAACtC,EAAA,EAAD,CAAKD,UAAU,gBAAf,SACE,cAACE,EAAA,EAAD,UACE,cAAC,EAAD,CACE2C,aAAchD,EAAQyC,MACtB/D,OAAQsB,EAAQ0C,gBAChBf,SAAU3B,EAAQ2B,SAClBhD,IAAKA,aAOf,4D,iBCgBO4G,EAjFM,SAAC,GAAc,IAAZtC,EAAW,EAAXA,KAAW,EACCrE,mBAAS,IADV,mBAC1B4G,EAD0B,KACfC,EADe,OAEK7G,mBAAS,IAFd,mBAE1B8G,EAF0B,KAEbC,EAFa,OAGP/G,mBAAS,IAHF,mBAG1BgH,EAH0B,KAGnBC,EAHmB,OAIPjH,mBAAS,IAJF,mBAI1BlB,EAJ0B,KAInBoI,EAJmB,KAM3BpH,EAASqH,aAAY,SAAAjE,GAAK,OAAIA,EAAMpD,UAE1CgF,QAAQC,IAAIV,EAAM,mCAwClB,OALA/C,qBAAU,WACRwD,QAAQC,IAAI,SAlCO,SAAAV,GACnB,IACM+C,EAAqD,GADpC,IAAInH,KAAKoE,EAAKgD,OACAtD,oBAA2B,IAC1DuD,EAAWrH,KAAKsH,MAAMlD,EAAKgD,OAASD,EACpCI,EAASvH,KAAKsH,MAAMlD,EAAKoD,KAAOL,EAChC1E,EAAO2B,EAAK2C,MACZU,EAAuB,MAAfrD,EAAK2C,MAAgB,QAAU3C,EAAKsD,OAC5CC,EAAS,UAAM5D,IACnB,IAAI/D,KAAKqH,GACT,MAFa,iBAGLtD,IAAW,IAAI/D,KAAKuH,GAAS,MAHxB,eAGoCxD,IACjD,IAAI/D,KAAKqH,GACT,gBAEIO,EAAW,UAAM7D,IACrB,IAAI/D,KAAKqH,EAAoB,IAATxH,GACpB,MAFe,iBAGPkE,IACR,IAAI/D,KAAKuH,EAAkB,IAAT1H,GAClB,MALe,eAMTkE,IAAW,IAAI/D,KAAKqH,EAAoB,IAATxH,GAAgB,gBAEvDgF,QAAQC,IAAI,IAAI9E,KAAKqH,GAAW,0BAChCxC,QAAQC,IAAI,IAAI9E,KAAKuH,GAAS,wBAC9B1C,QAAQC,IAAI,IAAI9E,KAAKqH,EAAoB,IAATxH,GAAgB,kCAChDgF,QAAQC,IAAI,IAAI9E,KAAKuH,EAAkB,IAAT1H,GAAgB,gCAE9C+G,EAAae,GACbb,EAAec,GACfX,EAASQ,GACTT,EAASvE,GAKToF,CAAazD,KACZ,CAACA,IAGF,mCACE,qBAAK9C,UAAU,eAAf,SACG8C,EAAK0D,IACJ,sBAAKxG,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,UACE,iCAAOoF,EAAP,YAEF,cAACpF,EAAA,EAAD,UACE,iCAAOsF,EAAP,cAEF,cAACtF,EAAA,EAAD,UACE,sBAAMkG,MAAO,CAAE5I,MAAOA,GAAtB,SAAgCkI,SAIpC,sBAAKzF,UAAU,kBAAf,UACE,cAACC,EAAA,EAAD,UACE,iCAAOoF,EAAP,YAEF,cAACpF,EAAA,EAAD,UACE,iCAAOsF,EAAP,cAEF,cAACtF,EAAA,EAAD,UACE,sBAAMkG,MAAO,CAAE5I,MAAOA,GAAtB,SAAgCkI,cCsM/BgB,EA1QArE,IAAMC,MAAK,YAAmB,IAAhBgC,EAAe,EAAfA,SAAe,EAClB5F,mBAAS,IADS,mBACnCiI,EADmC,KAC7BC,EAD6B,OAEJlI,mBAAS,IAFL,mBAEnCmI,EAFmC,KAEtBC,EAFsB,OAGVpI,mBAAS,IAHC,mBAGnCqI,EAHmC,KAGzBC,EAHyB,OAIRtI,mBAAS,IAJD,mBAInCuI,EAJmC,KAIxBC,EAJwB,OAKVxI,mBAAS,IALC,mBAKnCyI,EALmC,KAKzBC,EALyB,OAMR1I,mBAAS,IAND,gCAOEA,mBAAS,KAPX,mBAOnC2I,EAPmC,KAOnBC,EAPmB,OAQF5I,mBAAS,IARP,mBAQnC6I,EARmC,KAQrBC,EARqB,KAapCC,EAAiB,uCAAG,WAAOC,EAAUC,GAAjB,yBAAAlD,EAAA,6DACxBjB,QAAQC,IAAIa,EAASM,IAAK,QAC1BpB,QAAQC,IAAIkE,EAAW,QAFC,SAGDjD,IAAMC,IAAN,oDACwB+C,EADxB,iBACyCC,EADzC,cAHC,uBAGhBvG,EAHgB,EAGhBA,KAHgB,SAQdsD,IAAMC,IAAN,oDACqC+C,EADrC,iBACsDC,EADtD,mBARc,uBAOdC,EAPc,EAOtBxG,KAAQwG,OAPc,UAadlD,IAAMC,IAAN,oDACqC+C,EADrC,iBACsDC,EADtD,sBAbc,iBAYdE,EAZc,EAYtBzG,KAAQyG,WAOVjB,EAAQxF,GACR0F,EAAee,GACfC,EAAYF,GACZG,IAtBwB,4CAAH,wDAyBjBD,EAAc,SAAAE,GAClB,IAAIC,EACAC,EACAC,EAEJH,EAASI,SAAQ,SAACC,EAASC,GACzB,OAAQA,GACN,KAAK,EACHL,EAAOI,EACP,MACF,KAAK,EACHH,EAAOG,EACP,MACF,KAAK,EACHF,EAAOE,EACP,MACF,QACE,MAAM,IAAIE,MAAM,2BAItBvB,EAAYiB,GACZf,EAAagB,GACbd,EAAYe,GACZ3E,QAAQC,IAAI,OAAQwE,GACpBzE,QAAQC,IAAI,OAAQyE,GACpB1E,QAAQC,IAAI,OAAQ0E,IAGhBJ,EAAiB,uCAAG,8CAAAtD,EAAA,sEACLC,IAAMC,IAAN,iDADK,OAClBvD,EADkB,OAIlBoH,EAAepH,EAAKA,KAAKqH,QAAQ,wBACjCC,EAAYtH,EAAKA,KAAKuH,MAAMH,GAC5BI,EAAUF,EAAUC,MAAM,GAAI,IAC9BE,EAASH,EAAUC,MAAM,GAAI,IAC7BG,EAAUJ,EAAUC,MAAM,IAAK,KAC/BI,EAAUL,EAAUC,MAAM,IAAK,KAC/BK,EAASN,EAAUC,MAAM,IAAK,KAC9BM,EAAUP,EAAUC,MAAM,IAAK,KAG/BO,EAAU,CAACH,EAASC,EAAQC,GAElC3B,EAHkB,CAACsB,EAASC,EAAQC,IAIpCtB,EAAgB0B,GAjBQ,4CAAH,qDAwBvB,OAJAlJ,qBAAU,WACRyH,EAAkBnD,EAASM,IAAKN,EAASO,OACxC,CAACP,IAGF,mCACE,sBAAKrE,UAAU,kBAAf,UACE,iDACA,eAACC,EAAA,EAAD,CAAKD,UAAU,iBAAf,UACE,eAACE,EAAA,EAAD,WACE,oCACA,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CACEkJ,kBAAmB,GACnBC,YAAY,UACZC,SAAU,GACVC,mBAAoB,EAAE,IAAK,IAAK,GAAI,EAAG,IACvCC,cAAe,CAAC,UAAW,UAAW,UAAW,WACjDC,UAAW,GACX9D,MAAO+D,SAAS9C,EAAK+C,IACrBC,MAAO,IACPC,OAAQ,WAId,eAACzJ,EAAA,EAAD,WACE,yCACA,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CACEkJ,kBAAmB,GACnBC,YAAY,UACZC,SAAU,GACVG,SAAU,EACVF,mBAAoB,CAAC,EAAG,EAAG,GAAI,GAAI,IACnCC,cAAe,CAAC,UAAW,UAAW,UAAW,WACjD7D,MACEmE,WAAWlD,EAAKmD,SAAW,GAAK,GAAKD,WAAWlD,EAAKmD,SAEvDH,MAAO,IACPC,OAAQ,WAId,eAACzJ,EAAA,EAAD,WACE,uCACA,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CACEkJ,kBAAmB,GACnBC,YAAY,UACZI,SAAU,IACVF,mBAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,KACzCC,cAAe,CAAC,UAAW,UAAW,UAAW,WACjD7D,MAAO+D,SAAS9C,EAAKoD,OACrBJ,MAAO,IACPC,OAAQ,cAKhB,eAAC1J,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,4CACA,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CACEkJ,kBAAmB,GACnBC,YAAY,UACZC,SAAU,GACVW,SAAU,EAGVT,cAAe,CACb,UACA,UACA,UACA,UACA,WAEF7D,MAAO+D,SAAS9C,EAAKsD,IACrBN,MAAO,IACPC,OAAQ,WAId,eAACzJ,EAAA,EAAD,WACE,2CACA,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CACEkJ,kBAAmB,GACnBC,YAAY,UACZC,SAAU,GACVW,SAAU,EAGVT,cAAe,CACb,UACA,UACA,UACA,UACA,WAEF7D,MAAO+D,SAAS9C,EAAKuD,SACrBP,MAAO,IACPC,OAAQ,WAId,eAACzJ,EAAA,EAAD,WACE,4CACA,qBAAKF,UAAU,cAAf,SACE,cAAC,IAAD,CACEkJ,kBAAmB,GACnBC,YAAY,UACZC,SAAU,GACVW,SAAU,EAGVT,cAAe,CACb,UACA,UACA,UACA,UACA,WAEF7D,MAAO+D,SAAS9C,EAAKwD,SACrBR,MAAO,IACPC,OAAQ,cAMhB,6CAEA,eAAC1J,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,uCACA,wBAAOiG,MAAO,CAAE5I,MAAOqJ,EAAYR,QAAnC,UACGQ,EAAYnB,MADf,UAIF,eAACvF,EAAA,EAAD,WACE,+CACA,sDAA+BoH,EAAa,GAA5C,OACA,wDAAmCA,EAAa,GAAhD,OACA,qDAA8BA,EAAa,GAA3C,UAEF,eAACpH,EAAA,EAAD,WACE,iDACA,sDAA+BkH,EAAe,GAA9C,OACA,wDAAmCA,EAAe,GAAlD,OACA,qDAA8BA,EAAe,GAA7C,aAGJ,sBAAKpH,UAAU,kBAAf,UACE,uDAEA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACG4G,EAASpD,KAAI,SAAAyG,GACZ,OAAO,cAAC,EAAD,CAAgCrH,KAAMqH,GAAnBA,EAAMrE,YAGpC,cAAC5F,EAAA,EAAD,UACG8G,EAAUtD,KAAI,SAAA0G,GACb,OAAO,cAAC,EAAD,CAAiCtH,KAAMsH,GAApBA,EAAOtE,YAGrC,cAAC5F,EAAA,EAAD,UACGgH,EAASxD,KAAI,SAAA2G,GACZ,OAAO,cAAC,EAAD,CAAgCvH,KAAMuH,GAAnBA,EAAMvE,0BC7JjCwE,EAlGElI,IAAMC,MAAK,YAAmB,IAAhBkI,EAAe,EAAfA,SAAe,EACZ9L,mBAAS8L,GADG,mBACrClG,EADqC,KAC3BmG,EAD2B,OAEpB/L,mBAAS,IAFW,mBAErCgM,EAFqC,KAE/BC,EAF+B,KAItCC,EAAaC,iBAAO,MAEpB1H,EAAWC,cACjBI,QAAQC,IAAI,gBAAiBiH,GAC7B,IAAMI,EAAgBhG,mCAGhBiG,EAAe,uCAAG,oCAAAtG,EAAA,6DACtBjB,QAAQC,IAAI,WAAYiH,EAAKM,eAC7BxH,QAAQC,IAAI,WAAYqH,GAFF,kBAIGpG,IAAMC,IAAN,yDAC6B+F,EAD7B,gBACyCI,IAL5C,OAIdxG,EAJc,OAQpBd,QAAQC,IAAI,gBAAiBa,GART,EAahBA,EAASlD,KAAK6J,QAAQC,MACxB,SAAAC,GAAM,OAAIA,EAAOC,WAAWV,KAAKM,gBAAkBN,EAAKM,iBAdtC,IAYlBK,SAAYzG,EAZM,EAYNA,IAAKC,EAZC,EAYDA,IAKnB4F,EAAY,CAAE7F,IAAKA,EAAKC,IAAKA,IAjBT,kDAmBpByG,MAAM,2BAnBc,0DAAH,qDAuBfC,EAAW,uCAAG,gCAAA9G,EAAA,sEAGRC,IAAMC,IAAN,4DAC6CL,EAASM,IADtD,gBACiEN,EAASO,IAD1E,0BA5BYC,qCAyBJ,gCAEhB1D,KAFgB,GAEPE,EAFO,KAEPA,KAUXqJ,EAAQrJ,GAZU,2CAAH,qDAmCjB,OANAtB,qBAAU,WAERuL,IACApI,EAASxB,EA7DE,eA8DV,CAAC2C,IAGF,qCACE,qBAAKrE,UAAU,cAAf,SACE,eAACuL,EAAA,EAAD,CAAMC,SAhBK,SAAAC,GACfA,EAAEC,iBACFnI,QAAQC,IAAI,uBAAwBiH,GACpCK,IACAH,EAAWzF,QAAQO,MAAQ,IAYGU,MAAO,CAAEuD,MAAO,SAA1C,UACE,sBAAK1J,UAAU,SAAf,UACE,cAACY,EAAA,EAAD,UACE,gDAEF,cAAC,IAAD,CAAiB+K,KAAMC,IAAgB5L,UAAU,gBACjD,cAAC6L,EAAA,EAAD,CACE7H,GAAG,SACH3C,KAAK,SACLyK,SAhCW,SAAAL,GAAM,IAEfhG,EACRgG,EADFM,OAAUtG,MAEZiF,EAAQjF,IA6BEuG,YAAavB,EACbwB,SAAUtB,OAId,cAACuB,EAAA,EAAD,CAAQlM,UAAU,gBAAlB,yBAIJ,cAAC,EAAD,CAASqE,SAAUA,IAEnB,cAAC,EAAD,CAAQA,SAAUA,U,kEClGlB8H,I,qBAAiB,CACrBC,OAAQvH,0CACRwH,WAAYxH,uCACZyH,UAAWzH,uBACX0H,cAAe1H,mCACf2H,kBAAmB3H,eACnB4H,MAAO5H,mxBAAY6H,mBAGrBC,KAASC,cAAcT,IAEvB,IACeU,GADUF,KAGZG,GAAcH,KAASI,OC4HrBC,ID3HUL,KAASM,YACJN,KAASO,UCL1B,WAAO,IAAD,EACSzO,mBAAS,IADlB,mBACV0O,EADU,KACHC,EADG,OAEe3O,mBAAS,IAFxB,mBAEV4O,EAFU,KAEAC,EAFA,OAGmB7O,oBAAS,GAH5B,mBAGV8O,EAHU,KAGEC,EAHF,OAIS/O,mBAAS,IAJlB,mBAIVgP,EAJU,KAIHC,EAJG,KAMX5B,EAAW,SAAAL,GAAM,IAAD,EAGhBA,EADFM,OAAU1K,EAFQ,EAERA,KAAMoE,EAFE,EAEFA,MAEL,UAATpE,EACF+L,EAAS3H,GACS,aAATpE,GACTiM,EAAY7H,IAIV+F,EAAQ,uCAAG,WAAMC,GAAN,eAAAjH,EAAA,yDACfiH,EAAEC,iBADa,UAIT6B,EAJS,gCAMET,GAAYa,+BACvBR,EACAE,GARS,OAMXlM,EANW,+CAYE2L,GAAYc,2BAA2BT,EAAOE,GAZhD,QAYXlM,EAZW,eAcboC,QAAQC,IAAIrC,GAdC,kDAgBboC,QAAQkK,MAAR,MACAC,EAAS,KAAMG,SAjBF,0DAAH,sDAsBRC,EAAa,uCAAG,WAAMrC,GAAN,mBAAAjH,EAAA,4DAMP,YAJDnD,EACRoK,EADFM,OAAU1K,MAKV0M,EAAW,IAAIlB,GAAiBE,KAAKiB,mBACnB,aAAT3M,IACT0M,EAAW,IAAIlB,GAAiBE,KAAKkB,sBATnB,kBAaCnB,GAAYoB,gBAAgBH,GAb7B,OAaZ5M,EAbY,OAclBoC,QAAQC,IAAIrC,GAdM,gDAgBlBoC,QAAQkK,MAAR,MACAC,EAAS,KAAMG,SAjBG,yDAAH,sDAqBnB,OACE,mCACE,cAAC3N,EAAA,EAAD,CAAKiO,GAAG,KAAKC,GAAI,CAAE9Q,KAAM,EAAGiB,OAAQ,GAAKyB,UAAU,QAAnD,SACE,eAACqO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYtK,GAAG,cAAf,SACE,6CAEF,eAACuK,EAAA,EAAD,WACE,eAAChD,EAAA,EAAD,CAAMC,SAAUA,EAAhB,UACGiC,EAAQ,cAACe,GAAA,EAAD,CAAOjR,MAAM,SAAb,SAAuBkQ,IAAiB,GACjD,eAACgB,GAAA,EAAD,WACE,cAAC7N,EAAA,EAAD,CAAO8N,IAAI,QAAX,mBACA,cAAC7C,EAAA,EAAD,CACE8C,KAAK,QACLtN,KAAK,QACL2C,GAAG,QACHyB,MAAO0H,EACPnN,UAAU,oBACV4O,UAAQ,EACR9C,SAAUA,OAGd,eAAC2C,GAAA,EAAD,WACE,cAAC7N,EAAA,EAAD,CAAO8N,IAAI,QAAX,sBACA,cAAC7C,EAAA,EAAD,CACE8C,KAAK,WACLtN,KAAK,WACL2C,GAAG,WACHyB,MAAO4H,EACPrN,UAAU,eACV4O,UAAQ,EACR9C,SAAUA,OAId,cAACI,EAAA,EAAD,CAAQ3O,MAAM,UAAUsR,OAAK,EAAC7O,UAAU,OAAxC,SACGuN,EAAa,iBAAmB,aAGrC,sBAAMuB,QA7DM,kBAAMtB,GAAeD,IA6DjC,SACGA,EAAa,UAAY,sBAG9B,eAACwB,GAAA,EAAD,WACE,cAAC7C,EAAA,EAAD,CACE2C,OAAK,EACLxN,KAAK,SACLrB,UAAU,OACV8O,QAAShB,EAJX,kCAQA,cAAC5B,EAAA,EAAD,CACE2C,OAAK,EACLxN,KAAK,WACLrB,UAAU,OACV8O,QAAShB,EAJX,gD,mBChIG,IACbkB,OAAQ,CACN,CACEC,YAAa,MACbC,YAAa,WACbC,QAAS,CACP,CACE5R,MAAO,aAIb,CACE0R,YAAa,MACbC,YAAa,mBACbC,QAAS,CACP,CACEC,MAAO,KAET,CACEC,UAAW,IAEb,CACEC,OAAQ,QAEV,CACE/R,MAAO,aAIb,CACE0R,YAAa,MACbC,YAAa,qBACbC,QAAS,CACP,CACEG,OAAQ,QAEV,CACEC,WAAY,KAEd,CACEC,WAAY,MAEd,CACEjS,MAAO,aAIb,CACE0R,YAAa,MACbC,YAAa,cACbC,QAAS,CACP,CACEK,WAAY,SAIlB,CACEP,YAAa,YACbC,YAAa,WACbC,QAAS,CACP,CACEE,UAAW,IAEb,CACEE,WAAY,KAEd,CACEhS,MAAO,aAIb,CACE0R,YAAa,MACbC,YAAa,WACbC,QAAS,CACP,CACEI,WAAY,MAIlB,CACEN,YAAa,WACbC,YAAa,WACbC,QAAS,CACP,CACEE,UAAW,IAEb,CACEE,YAAa,MAInB,CACEN,YAAa,OACbC,YAAa,WACbC,QAAS,CACP,CACEE,UAAW,IAEb,CACEE,YAAa,MAInB,CACEN,YAAa,OACbC,YAAa,gBACbC,QAAS,CACP,CACE5R,MAAO,aAIb,CACE0R,YAAa,OACbC,YAAa,kBACbC,QAAS,CACP,CACEI,WAAY,IAEd,CACEF,UAAW,IAEb,CACEC,OAAQ,UAId,CACEL,YAAa,QACbC,YAAa,MACbC,QAAS,CACP,CACEE,WAAY,QCnHPI,GAdA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACKjR,oBAAS,GADd,mBACpBkR,EADoB,KACVC,EADU,KAErBlJ,EAAO,kBAAMkJ,GAAaD,IAEhC,OACE,mCACE,sBAAKE,aAAcnJ,EAAMoJ,aAAcpJ,EAAvC,UACE,cAAC,IAAD,CAAiBnJ,MAAM,MAAMoO,KAAMoE,IAAUzS,KAAK,OACjDqS,EAAW,sBAAMxJ,MAAO,CAAE5I,MAAO,SAAtB,SAAkCmS,IAAe,WCwDtDM,GA1DO,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACJxR,mBAAS,IADL,mBAC7B4F,EAD6B,KACnBmG,EADmB,KAG9BtH,EAAWC,cAEb+M,EAAgB,GAEdC,EAAgB,uCAAG,8BAAA3L,EAAA,sEACCC,IAAMC,IAC5B,+CAFqB,OAKvB,IAJM0L,EADiB,OAKd/M,EAAI,EAAGA,EAAIgN,OAAOC,KAAKF,EAAUjP,MAAMmC,OAAS,EAAGD,IAC1D6M,EAAa,sBAAOA,GAAP,CAAsBE,EAAUjP,KAAKkC,KAGpDmH,EAAY0F,GATW,2CAAH,qDAYhB/O,EAAOkD,EAASX,KAAI,SAAA6M,GAAK,MAAK,CAClCvM,GAAIuM,EAAMvM,GACVW,IAAK4L,EAAM5L,IACXC,IAAK2L,EAAMC,KACX9J,KAAM6J,EAAMhQ,gBAUd,OAPAgD,QAAQC,IAAIrC,GAEZpB,qBAAU,WACRoQ,IACAjN,EAASxB,EA5BE,qBA6BV,IAGD,qCACE,gDAEA,qBAAKyE,MAAO,CAAEwD,OAAQ,OAAQD,MAAO,OAAQ+G,UAAW,QAAxD,SACE,cAAC,KAAD,CACEC,iBAAkB,CAAEC,IAzCX9L,0CAyC4B+L,UAAW,CAAC,kBACjDC,cAAeZ,EACfa,YAAa,EACbC,QAASC,GAJX,SAMG7P,EAAKuC,KAAI,SAAAW,GAAQ,OAChB,cAAC,GAAD,CAEEM,IAAKN,EAASM,IACdC,IAAKP,EAASO,IACd8K,KAAMrL,EAASqC,MAHVrC,EAASL,eC0BbiN,GAvEG,SAAC,GAAgB,IAAdhB,EAAa,EAAbA,OAAa,EACJxR,mBAAS,IADL,mBACzByS,EADyB,KACjBC,EADiB,KAG1BjO,EAAWC,cAEXiO,EAAoB,kBACxB,cAAC,IAAD,CAAiBzF,KAAMC,IAAgBtO,KAAK,QAGxC+T,EAAY,uCAAG,4BAAA7M,EAAA,sEACAC,IAAMC,IACvB,mEAFiB,OACbvD,EADa,OAKnBoC,QAAQC,IAAIrC,GAIZgQ,EACEhQ,EAAKA,KAAKmQ,YACP5N,KAAI,SAAAW,GACH,IAAI1E,EAAO0E,EAAS,GAGpB,OAFAA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAK1E,EACP,CAAC0E,EAAS,GAAIA,EAAS,GAAIA,EAAS,OAE5CkN,QACC,SAAAD,GAAW,OACRA,EAAY,GAAK,GAAKA,EAAY,IAAM,IAAMA,EAAY,GAAK,MAnBrD,2CAAH,qDA8BZE,EAAc,CAClBC,UAPWP,EAAOxN,KAAI,SAAA6M,GAAK,MAAK,CAChC5L,IAAK4L,EAAM,GACX3L,IAAK2L,EAAM,GACXjB,OAAQiB,EAAM,OAKdQ,QAAS,CACPW,OAAQ,GACRC,QAAS,KASb,OALA5R,qBAAU,WACRsR,IACAnO,EAASxB,EA/CE,iBAgDV,IAGD,qCACE,4CAEA,qBAAKyE,MAAO,CAAEwD,OAAQ,OAAQD,MAAO,OAAQ+G,UAAW,QAAxD,SACE,cAAC,KAAD,CACEC,iBAAkB,CAAEC,IA5DX9L,0CA4D4B+L,UAAW,CAAC,kBACjDC,cAAeZ,EACfa,YAAa,EACbc,QAASJ,EACTT,QAASC,GALX,SAOE,cAACI,EAAD,CAAmBzM,IAAKsL,EAAOtL,IAAKC,IAAKqL,EAAOrL,cCrC3CiN,GAlCO,WAAO,IAAD,EACFpT,mBAAS,6DAAD,QAC+B,IAAIC,MAAOuG,YAFhD,mBACnB6M,EADmB,KACdC,EADc,KAKpB7O,EAAWC,cACjBI,QAAQC,IAAIsO,EAAK,SAgBjB,OARA/R,qBAAU,WAGR,OAFAiS,aAAY,kBAPW,WACvB,IAAIC,GAAI,IAAIvT,MAAOuG,UACf9D,EAAI,oEAAgE8Q,GACxEF,EAAS5Q,GAIS+Q,KAAoB,KACtChP,EAASxB,EAZE,mBAaJ,WACLyQ,mBAED,IAGD,mCACE,gCACE,gDACA,qBAAKnS,UAAU,cAAcmG,MAAO,CAAEsK,UAAW,QAAjD,SACE,qBAAK2B,IAAI,GAAGpO,GAAG,SAASqO,IAAKP,YCbxBQ,GAdA,WAAO,IACZ/Q,EAASqE,aAAY,SAAAjE,GAAK,OAAIA,KAA9BJ,KAER,OACE,qBAAKyC,GAAG,cAAchE,UAAU,OAAhC,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKkO,GAAG,IAAID,GAAG,OAAOnO,UAAU,qBAAhC,SACE,6BAAKuB,W,6GCsHAgR,GA/GI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACT/T,oBAAS,GADA,mBAC9BgU,EAD8B,KACtBC,EADsB,OAEGjU,oBAAS,GAFZ,mBAE9BkU,EAF8B,KAEhBC,EAFgB,KAG/BC,EAAUC,cAEhBvP,QAAQC,IAAIgP,EAAY,8CAExB,IAIMO,EAAU,kBAAMH,GAAgB,SAAAI,GAAS,OAAKA,MAOpD,OACE,cAACC,GAAA,EAAD,CAAQ1V,MAAM,OAAO2V,MAAI,EAACC,OAAO,KAAKnT,UAAU,aAAhD,SACE,eAACoT,GAAA,EAAD,WACE,cAAC,KAAD,CAAMC,GAAG,IAAIrT,UAAU,4CAAvB,SACE,oBAAImG,MAAO,CAAEmN,WAAY,QAAzB,4BAEF,cAACC,GAAA,EAAD,CAAezE,QAjBA,WACnB4D,GAAWD,MAiBP,cAACe,GAAA,EAAD,CAAUf,OAAQA,EAAQgB,QAAM,EAAhC,SACE,eAACC,GAAA,EAAD,CACE1T,UAAU,wCACVyT,QAAM,EACNtN,MAAO,CAAEmN,WAAY,QAHvB,UAKE,cAACK,GAAA,EAAD,UACE,cAACpI,EAAA,EAAD,CAAMvL,UAAU,eAAhB,SACE,cAAC4T,GAAA,EAAD,UACE,cAAC,KAAD,CAAMP,GAAG,mBAAmBrT,UAAU,uBAAtC,4BAMN,cAAC2T,GAAA,EAAD,UACE,cAACpI,EAAA,EAAD,CAAMvL,UAAU,eAAhB,SACE,cAAC4T,GAAA,EAAD,UACE,cAAC,KAAD,CAAMP,GAAG,iBAAiBrT,UAAU,uBAApC,kCAMN,cAAC2T,GAAA,EAAD,UACE,cAACpI,EAAA,EAAD,CAAMvL,UAAU,eAAhB,SACE,cAAC4T,GAAA,EAAD,UACE,cAAC,KAAD,CAAMP,GAAG,aAAarT,UAAU,uBAAhC,8BAMN,cAAC2T,GAAA,EAAD,UACE,cAACpI,EAAA,EAAD,CAAMvL,UAAU,eAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC6T,GAAA,EAAD,CAAUC,KAAG,EAACrB,OAAQE,EAAtB,UACE,cAACoB,GAAA,EAAD,CACE/P,GAAG,SACH8P,KAAG,EACHE,OAAK,EACLnE,aAAckD,EACdjD,aAAciD,EALhB,yBASA,eAACkB,GAAA,EAAD,CAAcpE,aAAckD,EAASjD,aAAciD,EAAnD,UACE,cAACmB,GAAA,EAAD,UACE,cAAC,KAAD,CAAMb,GAAG,QAAQrT,UAAU,uBAA3B,8BAIF,cAACkU,GAAA,EAAD,UACE,cAAC,KAAD,CAAMb,GAAG,UAAUrT,UAAU,uBAA7B,4CASXwS,EACC,cAACmB,GAAA,EAAD,UACE,cAACpI,EAAA,EAAD,CAAMvL,UAAU,UAAhB,SACE,cAAC4T,GAAA,EAAD,UACE,cAAC,KAAD,CACE9E,QA/EH,WACfhC,GAAYqH,UACZtB,EAAQuB,KAAK,MA8EKf,GAAG,IACHrT,UAAU,uBAHZ,0BAWN,cC/BCqU,GApFS,WAAO,IAAD,EACF5V,mBAAS,IADP,mBACrB6V,EADqB,KACdC,EADc,OAEE9V,mBAAS,IAFX,mBAErB+V,EAFqB,KAEZC,EAFY,KAItBvR,EAAWC,cAmDXuR,EAAW,SAACC,EAAMC,EAAOC,GAC7B,IAAM1T,EAAI,gFAA4EwT,EAA5E,YAAoFC,EAApF,YAA6FC,EAA7F,wBAAgHF,GAAhH,OAAuHC,GAAvH,OAA+HC,EAA/H,aACVN,EAASpT,IAOX,OAJApB,qBAAU,YAtDW,WACnB,IAAM+U,EAAW/T,MAASC,OAAO,uBAC3B+T,EAAcD,EAASrU,UAAU,EAAG,GACpCuU,EAAeF,EAASrU,UAAU,EAAG,GACvCwU,EAAaH,EAASrU,UAAU,EAAG,IAAM,EAGzCwU,EAAa,KACfA,EAAU,WAAOA,IAGA,OAAfA,IAEAA,EARU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAOvCC,MAAK,SAAAN,GAAK,OAAIA,IAAUI,KACnB,KACa,OAAjBA,EACI,KAEA,MAIjB,IAAMG,EAAQ,UAAMJ,EAAN,YAAqBC,EAArB,YAAqCC,GACnD1R,QAAQC,IAAI2R,GACZV,EAAWU,GACX5R,QAAQC,IAAIgR,EAAS,WAErB,IAAMrT,EAAI,gFAA4E4T,EAA5E,YAA2FC,EAA3F,YAA2GC,EAA3G,wBAAqIF,GAArI,OAAmJC,GAAnJ,OAAkKC,EAAlK,aAEVV,EAASpT,GAGU,OAAjB6T,GACiB,OAAjBA,GACiB,OAAjBA,GACiB,OAAjBA,GAEA3J,MAAM,8CAmBR+J,GACAlS,EAASxB,EA3DE,uBA4DV,IAED,qCACE,kDACA,uBAAMoK,SArBK,SAAAL,GACbA,EAAEC,iBACF,IAAM2J,EAAa5J,EAAEM,OAAOtG,MACtBkP,EAAOU,EAAW5U,UAAU,EAAG,GAC/BmU,EAAQS,EAAW5U,UAAU,EAAG,GAChCoU,EAAMQ,EAAW5U,UAAU,EAAG,IACpCiU,EAASC,EAAMC,EAAOC,IAepB,UACE,uBACE1O,MAAO,CAAEmN,WAAY,OAAQgC,SAAU,OAAQ7E,UAAW,QAD5D,iCAKA,uBAAO9B,KAAK,OAAOtN,KAAK,OAAOsB,IAAI,aAAaD,IAAK8R,OAEvD,qBAAKxU,UAAU,mCAAf,SACE,qBAAKA,UAAU,0CAAf,SACE,wBAAQA,UAAU,wBAAwBgE,GAAG,QAAQqO,IAAKiC,YC1BrDiB,GA5CG,SAAC,GAA8B,IAA5B/C,EAA2B,EAA3BA,WAAYnO,EAAe,EAAfA,SACzBmR,EAAY,SAACC,EAAWC,GAC5B,OAAO,SAAAC,GACL,OAAO,cAACF,EAAD,2BAAeC,GAAWC,MAIrC,OACE,qCACE,cAAC,GAAD,CAAYnD,WAAYA,IACxB,cAAC,GAAD,IACA,cAACY,GAAA,EAAD,CAAWpP,GAAG,YAAd,SACE,cAAC,IAAD,UACGwO,EACC,qCACE,cAAC,IAAD,CACEoD,KAAK,mBACLC,OAAK,EACLC,UAAWN,EAAUlL,EAAU,CAAEC,SAAUlG,MAE7C,cAAC,IAAD,CACEuR,KAAK,iBACLC,OAAK,EACLC,UAAWN,EAAUxF,GAAe,CAAEC,OAAQ5L,MAEhD,cAAC,IAAD,CACEuR,KAAK,aACLC,OAAK,EACLC,UAAWN,EAAUvE,GAAW,CAAEhB,OAAQ5L,MAE5C,cAAC,IAAD,CAAOuR,KAAK,QAAQC,OAAK,EAACC,UAAWjE,KACrC,cAAC,IAAD,CAAO+D,KAAK,UAAUC,OAAK,EAACC,UAAWzB,QAGzC,mCACE,cAAC,IAAD,CAAOuB,KAAK,IAAIC,OAAK,EAACC,UAAW9I,eCxBhC+I,GApBA,WAMb,OACE,qBAAK/R,GAAG,cAAchE,UAAU,kBAAhC,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,gDACmB,gCATZ,IAAIxB,MAAOwC,gBAQlB,mBAGA,yFCsCK8U,GAjDH,WAAO,IAAD,EACQvX,oBAAS,GADjB,mBACTwX,EADS,KACHC,EADG,OAEoBzX,oBAAS,GAF7B,mBAET+T,EAFS,KAEG2D,EAFH,OAGwB1X,mBAAS,CAC/CkG,IAAK,GACLC,IAAK,KALS,mBAGTwR,EAHS,KAGKC,EAHL,KAmChB,OAdAtW,qBAAU,WACR+M,GAAYwJ,oBAAmB,SAAAC,GAC7BhT,QAAQC,IAAI+S,GAEVJ,IADEI,GAKJL,GAAQ,MArBY,WACtB,IACEM,UAAUC,YAAYC,oBAAmB,SAAAnM,GAAa,IAAD,EAG/CA,EADFoM,OAAUlP,EAFuC,EAEvCA,SAAUC,EAF6B,EAE7BA,UAEtB2O,EAAgB,CAAE1R,IAAK8C,EAAU7C,IAAK8C,OAExC,MAAO+F,GACPpC,MAAM,8BAeRuL,KACC,IAGD,mCACE,sBAAKzQ,MAAO,CAAE0Q,gBAAiB,WAA/B,UACGZ,EACC,cAAC,GAAD,CAAWzD,WAAYA,EAAYnO,SAAU+R,IAE7C,mBAEF,cAAC,GAAD,UCvCRU,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1d074f8a.chunk.js","sourcesContent":["import {\n  WiDayStormShowers,\n  WiDaySunny,\n  WiCloudy,\n  WiDayRainMix,\n  WiDayRain,\n  WiDaySnow,\n  WiTornado,\n  WiFog,\n  WiDust,\n  WiDayFog,\n  WiSmoke,\n  WiNightAltStormShowers,\n  WiNightAltRainMix,\n  WiNightClear,\n  WiNightAltCloudy,\n  WiNightAltRain,\n  WiNightAltSnow,\n  WiNightFog,\n} from 'weather-icons-react';\n\nexport const weatherIconDay = {\n  Thunderstorm: <WiDayStormShowers size={70} color=\"white\" />,\n  Drizzle: <WiDayRainMix size={70} color=\"white\" />,\n  Rain: <WiDayRain size={65} color=\"white\" />,\n  Snow: <WiDaySnow size={70} color=\"white\" />,\n  Tornado: <WiTornado size={70} color=\"white\" />,\n  Clear: <WiDaySunny size={70} color=\"white\" />,\n  Mist: <WiFog size={70} color=\"white\" />,\n  Smoke: <WiSmoke size={70} color=\"white\" />,\n  Haze: <WiDayFog size={70} color=\"white\" />,\n  Dust: <WiDust size={70} color=\"white\" />,\n  Ash: <WiDust size={70} color=\"white\" />,\n  Squall: <WiDayStormShowers size={70} color=\"white\" />,\n  Clouds: <WiCloudy size={70} color=\"white\" />,\n};\n\nexport const weatherIconNight = {\n  Thunderstorm: <WiNightAltStormShowers size={70} color=\"white\" />,\n  Drizzle: <WiNightAltRainMix size={70} color=\"white\" />,\n  Rain: <WiNightAltRain size={65} color=\"white\" />,\n  Snow: <WiNightAltSnow size={70} color=\"white\" />,\n  Tornado: <WiTornado size={70} color=\"white\" />,\n  Clear: <WiNightClear size={70} color=\"white\" />,\n  Mist: <WiFog size={70} color=\"white\" />,\n  Smoke: <WiSmoke size={70} color=\"white\" />,\n  Haze: <WiNightFog size={70} color=\"white\" />,\n  Dust: <WiDust size={70} color=\"white\" />,\n  Ash: <WiDust size={70} color=\"white\" />,\n  Squall: <WiNightAltStormShowers size={70} color=\"white\" />,\n  Clouds: <WiNightAltCloudy size={70} color=\"white\" />,\n};\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Label, Row } from 'reactstrap';\nimport { weatherIconDay, weatherIconNight } from './WeatherIcons';\n\nconst CurrentWeather = ({ currWeather, offset, utc }) => {\n  const [sunrise, setSunrise] = useState(new Date(currWeather.sunrise * 1000));\n  const [sunset, setSunset] = useState(new Date(currWeather.sunset * 1000));\n  const [localTime, setLocalTime] = useState(new Date(currWeather.dt * 1000));\n  const [clouds, setClouds] = useState(currWeather.clouds);\n  const [windChill, setWindChill] = useState(currWeather.feels_like);\n  const [humidity, setHumidity] = useState(currWeather.humidity);\n  const [pressure, setPressure] = useState(currWeather.pressure);\n  const [temp, setTemp] = useState(currWeather.temp);\n  const [weather, setWeather] = useState(currWeather.weather);\n\n  const refresh = () => {\n    setSunrise(\n      new Date(utc + (offset + currWeather.sunrise - currWeather.dt) * 1000)\n    );\n    setSunset(\n      new Date(utc + (offset + currWeather.sunset - currWeather.dt) * 1000)\n    );\n    setLocalTime(new Date(utc + offset * 1000));\n    setClouds(currWeather.clouds);\n    setWindChill(currWeather.feels_like);\n    setHumidity(currWeather.humidity);\n    setPressure(currWeather.pressure);\n    setTemp(currWeather.temp);\n    setWeather(currWeather.weather);\n  };\n\n  const description = () => {\n    const exp = weather[0].description;\n    const firstLetter = exp.substring(0, 1);\n    const restLetter = exp.substring(1);\n    return `${firstLetter.toUpperCase()}${restLetter}`;\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [currWeather]);\n  return (\n    <>\n      <h3>Current Weather</h3>\n      <div className=\"curr-weather\">\n        <Row>\n          <Col className=\"curr-icon\">\n            {currWeather.sunset > currWeather.dt &&\n            currWeather.sunrise < currWeather.dt\n              ? weatherIconDay[weather[0].main]\n              : weatherIconNight[weather[0].main]}\n          </Col>\n          <Col className=\"curr-temp\">{Math.round(temp)}°c</Col>\n        </Row>\n        <Row>\n          <Col className=\"curr-description\">{description()}</Col>\n        </Row>\n        <Row className=\"curr-info\">\n          <Col>\n            <Row>\n              <Col>\n                <Label>Cloud Cover</Label>\n              </Col>\n              <Col className=\"col-right\">{clouds}%</Col>\n            </Row>\n            <Row>\n              <Col>\n                <Label>Humidity</Label>\n              </Col>\n              <Col className=\"col-right\">{humidity}%</Col>\n            </Row>\n            <Row>\n              <Col>\n                <Label>Sunrise</Label>\n              </Col>\n              <Col className=\"col-right\">\n                {sunrise.getHours() < 10\n                  ? `0${sunrise.getHours()}`\n                  : sunrise.getHours()}\n                :\n                {sunrise.getMinutes() < 10\n                  ? `0${sunrise.getMinutes()}`\n                  : sunrise.getMinutes()}\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Row>\n              <Col>\n                <Label>RealFeel</Label>\n              </Col>\n              <Col className=\"col-right\">{Math.round(windChill)}°c</Col>\n            </Row>\n            <Row>\n              <Col>\n                <Label>Pressure</Label>\n              </Col>\n              <Col className=\"col-right\">{pressure} hPa</Col>\n            </Row>\n            <Row>\n              <Col>\n                <Label>Sunset</Label>\n              </Col>\n              <Col className=\"col-right\">\n                {sunset.getHours()}:\n                {sunset.getMinutes() < 10\n                  ? `0${sunset.getMinutes()}`\n                  : sunset.getMinutes()}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"curr-local\">\n            <Label>Local Time : </Label> {moment().format('MMM')}\n            &nbsp;{localTime.getDate()}&nbsp;{localTime.getFullYear()} &nbsp;\n            {localTime.getHours() < 10\n              ? `0${localTime.getHours()}`\n              : localTime.getHours()}\n            :\n            {localTime.getMinutes() < 10\n              ? `0${localTime.getMinutes()}`\n              : localTime.getMinutes()}\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default CurrentWeather;\n","import { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst data = createSlice({\n  name: 'dataReducer',\n  initialState: { page: '', offset: 0, timezone: '' },\n  reducers: {\n    add: (state, action) => {\n      state.page = action.payload;\n    },\n    setOffset: (state, action) => {\n      state.offset = action.payload;\n    },\n    // setUtc: (state, action) => {\n    //   state.utc = action.payload;\n    // },\n    setTimeZone: (state, action) => {\n      state.timezone = action.payload;\n    },\n  },\n});\n\nexport const { add, setOffset, setTimeZone } = data.actions;\n\nexport default configureStore({ reducer: data.reducer });\n","import React, { useEffect, useState } from 'react';\nimport { Row } from 'reactstrap';\nimport { weatherIconDay } from '../WeatherIcons';\nimport dateFormat from 'dateformat';\n\nconst DailyWeatherDetail = React.memo(({ daily, offset }) => {\n  // console.log('info===>', daily);\n  const [weather, setWeather] = useState(daily);\n\n  const description = () => {\n    const exp = weather.weather[0].description;\n    const firstLetter = exp.substring(0, 1);\n    const restLetter = exp.substring(1);\n    return `${firstLetter.toUpperCase()}${restLetter}`;\n  };\n\n  const timezone_offset = new Date().getTimezoneOffset() * 60;\n\n  useEffect(() => {\n    setWeather(daily);\n  }, [daily]);\n  return (\n    <>\n      <div>\n        <div className=\"daily-date\">\n          <Row>\n            {dateFormat(\n              new Date((weather.dt + offset + timezone_offset) * 1000),\n              'ddd'\n            )}\n          </Row>\n        </div>\n        <div className=\"daily-date\">\n          <Row>\n            {dateFormat(\n              new Date((weather.dt + offset + timezone_offset) * 1000),\n              'mmm d'\n            )}\n          </Row>\n        </div>\n\n        <div className=\"daily-icon\">\n          <Row>{weatherIconDay[weather.weather[0].main]}</Row>\n        </div>\n\n        <div className=\"daily-detail\">\n          <div className=\"daily-temp\">\n            <Row>\n              {Math.round(weather.temp.max)}°c /{Math.round(weather.temp.min)}°c\n            </Row>\n          </div>\n          <div className=\"daily-description\">\n            <Row>{description()}</Row>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default DailyWeatherDetail;\n","import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { setOffset, setTimeZone } from '../../../store';\nimport DailyWeatherDetail from './DailyWeatherDetail';\n\nconst DailyWeather = React.memo(({ dailyWeather, offset, timezone }) => {\n  const [weather, setWeather] = useState([]);\n  const [time, setTime] = useState(offset);\n  const [zone, setZone] = useState(timezone);\n\n  const dispatch = useDispatch();\n\n  const nextSevenDays = () => {\n    let arr = [];\n    for (let i = 1; i < dailyWeather.length; i++) {\n      arr = [...arr, dailyWeather[i]];\n    }\n    setWeather(arr);\n    setTime(offset);\n    setZone(timezone);\n    console.log(offset, '설정된 데일리');\n  };\n\n  dispatch(setOffset(time));\n  dispatch(setTimeZone(zone));\n\n  useEffect(() => {\n    nextSevenDays();\n  }, [dailyWeather]);\n  return (\n    <>\n      <h3>7 Days Weather</h3>\n      <Row>\n        {weather.map(detail => (\n          <Col className=\"daily-weather\">\n            <DailyWeatherDetail\n              key={detail.dt}\n              daily={detail}\n              offset={offset}\n            />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n});\n\nexport default DailyWeather;\n","import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { weatherIconDay, weatherIconNight } from '../WeatherIcons';\n\nconst HourlyWeatherDetail = ({ weather, sunrise, sunset, offset }) => {\n  const [hweather, setHWeather] = useState(weather.weather[0]);\n\n  const description = () => {\n    const exp = hweather.description;\n    const firstLetter = exp.substring(0, 1);\n    const restLetter = exp.substring(1);\n    return `${firstLetter.toUpperCase()}${restLetter}`;\n  };\n\n  const timezone_offset = new Date().getTimezoneOffset() * 60;\n\n  useEffect(() => {\n    setHWeather(weather.weather[0]);\n  }, [weather]);\n\n  return (\n    <>\n      <Row>\n        <div className=\"hourly-time\">\n          <div>\n            <Col>\n              {new Date(\n                (weather.dt + offset + timezone_offset) * 1000\n              ).getMonth() + 1}\n              /\n              {new Date(\n                (weather.dt + offset + timezone_offset) * 1000\n              ).getDate()}\n              &nbsp;\n              {new Date(\n                (weather.dt + offset + timezone_offset) * 1000\n              ).getHours() < 10\n                ? `0${new Date(\n                    (weather.dt + offset + timezone_offset) * 1000\n                  ).getHours()}`\n                : new Date(\n                    (weather.dt + offset + timezone_offset) * 1000\n                  ).getHours()}\n              :00\n            </Col>\n          </div>\n        </div>\n\n        <Col id=\"hourly-icon\">\n          {sunset > weather.dt && sunrise < weather.dt\n            ? weatherIconDay[weather.weather[0].main]\n            : weatherIconNight[weather.weather[0].main]}\n        </Col>\n        <div className=\"hourly-temp\">\n          <div>\n            <Col className=\"\">{Math.round(weather.temp)}°c</Col>\n          </div>\n        </div>\n\n        <div className=\"hourly-windchill\">\n          <div>\n            <Col>RealFeel&reg; {Math.round(weather.feels_like)}°c</Col>\n          </div>\n        </div>\n        <div className=\"hourly-description\">\n          <div>\n            <Col>{description()}</Col>\n          </div>\n        </div>\n      </Row>\n    </>\n  );\n};\n\nexport default HourlyWeatherDetail;\n","import React, { useEffect, useState } from 'react';\nimport HourlyWeatherDetail from './HourlyWeatherDetail';\n\nconst HourlyWeather = ({ hourlyWeather, sunrise, sunset, offset }) => {\n  const [weather, setWeather] = useState([]);\n\n  const nextFiveHours = () => {\n    let arr = [];\n    for (let i = 1; i < 6; i++) {\n      arr = [...arr, hourlyWeather[i]];\n    }\n    setWeather(arr);\n  };\n\n  useEffect(() => {\n    nextFiveHours();\n  }, [hourlyWeather]);\n\n  return (\n    <>\n      <h3>Hourly Weather</h3>\n      {weather.map(detail => (\n        <HourlyWeatherDetail\n          key={detail.dt}\n          weather={detail}\n          sunrise={sunrise}\n          sunset={sunset}\n          offset={offset}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default HourlyWeather;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport CurrentWeather from './CurrentWeather';\nimport DailyWeather from './daily/DailyWeather';\nimport HourlyWeather from './hourly/HourlyWeather';\n\nconst Weather = React.memo(({ location }) => {\n  const [weather, setWeather] = useState();\n  const [utc, setUTC] = useState();\n\n  const OPENWEATHER_API = process.env.REACT_APP_OPENWEATHER_API_KEY;\n  console.log(location, 'Weather compo');\n\n  const getWeather = async () => {\n    const data = await axios.get(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${location.lat}&lon=${location.lng}&exclude=minutely&units=metric&appid=${OPENWEATHER_API}`\n    );\n    getUTCTime();\n    setWeather(data.data);\n  };\n\n  const getUTCTime = () => {\n    const timeNow = new Date();\n    const utcTime = timeNow.getTime() + timeNow.getTimezoneOffset() * 60 * 1000;\n    setUTC(utcTime);\n  };\n\n  console.log('state의 날씨 ==>', weather);\n\n  useEffect(() => {\n    getWeather();\n  }, [location]);\n\n  return (\n    <>\n      {weather ? (\n        <>\n          <div className=\"weather\">\n            <h1>Weather Forecast</h1>\n            <Row className=\"weather-current\">\n              <Col className=\"col-md-5 current\">\n                <CurrentWeather\n                  currWeather={weather.current}\n                  offset={weather.timezone_offset}\n                  utc={utc}\n                />\n              </Col>\n              <Col className=\"hourly\">\n                <HourlyWeather\n                  hourlyWeather={weather.hourly}\n                  sunrise={weather.current.sunrise}\n                  sunset={weather.current.sunset}\n                  offset={weather.timezone_offset}\n                />\n              </Col>\n            </Row>\n            <Row className=\"weather-daily\">\n              <Col>\n                <DailyWeather\n                  dailyWeather={weather.daily}\n                  offset={weather.timezone_offset}\n                  timezone={weather.timezone}\n                  utc={utc}\n                />\n              </Col>\n            </Row>\n          </div>\n        </>\n      ) : (\n        <h3>Weather is loading...</h3>\n      )}\n    </>\n  );\n});\n\nexport default Weather;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport dateFormat from 'dateformat';\nimport { Col, Row } from 'reactstrap';\n\nconst GenerateTime = ({ time }) => {\n  const [utcPeriod, setUtcPeriod] = useState('');\n  const [localPeriod, setLocalPeriod] = useState('');\n  const [value, setValue] = useState('');\n  const [color, setColor] = useState('');\n\n  const offset = useSelector(state => state.offset);\n\n  console.log(time, '넘어온 타임');\n\n  const generateTime = time => {\n    const basicStartTime = new Date(time.start);\n    const stadardOffset = basicStartTime.getTimezoneOffset() * 60 * 1000;\n    const utcStart = Date.parse(time.start) + stadardOffset;\n    const utcEnd = Date.parse(time.end) + stadardOffset;\n    const data = time.value;\n    const style = time.value === '3' ? 'green' : time.colour;\n    const periodUtc = `${dateFormat(\n      new Date(utcStart),\n      'HH'\n    )}:00 ~ ${dateFormat(new Date(utcEnd), 'HH')}:00 ${dateFormat(\n      new Date(utcStart),\n      'mmm dd yyyy'\n    )}`;\n    const periodLocal = `${dateFormat(\n      new Date(utcStart + offset * 1000),\n      'HH'\n    )}:00 ~ ${dateFormat(\n      new Date(utcEnd + offset * 1000),\n      'HH'\n    )}:00 ${dateFormat(new Date(utcStart + offset * 1000), 'mmm dd yyyy')}`;\n\n    console.log(new Date(utcStart), 'utc start 시간');\n    console.log(new Date(utcEnd), 'utc End 시간');\n    console.log(new Date(utcStart + offset * 1000), '현지시간 start');\n    console.log(new Date(utcEnd + offset * 1000), '현지시간 end');\n\n    setUtcPeriod(periodUtc);\n    setLocalPeriod(periodLocal);\n    setColor(style);\n    setValue(data);\n  };\n\n  useEffect(() => {\n    console.log('hello');\n    generateTime(time);\n  }, [time]);\n\n  return (\n    <>\n      <div className=\"threedays_kp\">\n        {time.now ? (\n          <div className=\"threedays_ture\">\n            <Row>\n              <span>{utcPeriod} UTC</span>\n            </Row>\n            <Row>\n              <span>{localPeriod} Local</span>\n            </Row>\n            <Row>\n              <span style={{ color: color }}>{value}</span>\n            </Row>\n          </div>\n        ) : (\n          <div className=\"threedays_false\">\n            <Row>\n              <span>{utcPeriod} UTC</span>\n            </Row>\n            <Row>\n              <span>{localPeriod} Local</span>\n            </Row>\n            <Row>\n              <span style={{ color: color }}>{value}</span>\n            </Row>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default GenerateTime;\n","import axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport ReactSpeedometer from 'react-d3-speedometer';\nimport { useSelector } from 'react-redux';\nimport dateFormat from 'dateformat';\nimport GenerateTime from './GenerateTime';\n\nconst Aurora = React.memo(({ location }) => {\n  const [info, setInfo] = useState('');\n  const [probability, setProbability] = useState('');\n  const [firstday, setFirstday] = useState([]);\n  const [secondDay, setSecondDay] = useState([]);\n  const [thirdDay, setThirdDay] = useState([]);\n  const [threedays, setThreeDays] = useState([]);\n  const [middleLatitude, setMiddleLatitude] = useState([]);\n  const [highLatitude, setHighLatitude] = useState([]);\n  // const offset = useSelector(state => state.offset);\n\n  // console.log(offset, 'Redux');\n  // console.log(utc, 'utcRedux');\n  const getAuroraForecast = async (latitude, longitude) => {\n    console.log(location.lat, 'lati');\n    console.log(longitude, 'long');\n    const { data } = await axios.get(\n      `https://api.auroras.live/v1/?type=ace&lat=${latitude}&long=${longitude}&data=all`\n    );\n    const {\n      data: { values },\n    } = await axios.get(\n      `https://api.auroras.live/v1/?type=ace&lat=${latitude}&long=${longitude}&data=threeday`\n    );\n    const {\n      data: { calculated },\n    } = await axios.get(\n      `https://api.auroras.live/v1/?type=ace&lat=${latitude}&long=${longitude}&data=probability`\n    );\n    // console.log('data all', data);\n    // console.log('data threeday', values);\n    // console.log('data probability', calculated);\n    setInfo(data);\n    setProbability(calculated);\n    getThreeday(values);\n    getHighestNowcast();\n  };\n\n  const getThreeday = threeday => {\n    let arr0;\n    let arr1;\n    let arr2;\n\n    threeday.forEach((element, index) => {\n      switch (index) {\n        case 0:\n          arr0 = element;\n          break;\n        case 1:\n          arr1 = element;\n          break;\n        case 2:\n          arr2 = element;\n          break;\n        default:\n          throw new Error('Something is Wrong!');\n      }\n    });\n\n    setFirstday(arr0);\n    setSecondDay(arr1);\n    setThirdDay(arr2);\n    console.log('arr0', arr0);\n    console.log('arr1', arr1);\n    console.log('arr2', arr2);\n  };\n\n  const getHighestNowcast = async () => {\n    const data = await axios.get(\n      `https://services.swpc.noaa.gov/text/sgarf.txt`\n    );\n    const chunkDataIdx = data.data.indexOf('A.  Middle Latitudes');\n    const chunkData = data.data.slice(chunkDataIdx);\n    const activeM = chunkData.slice(43, 45);\n    const minorM = chunkData.slice(74, 76);\n    const severeM = chunkData.slice(105, 107);\n    const activeH = chunkData.slice(155, 157);\n    const minorH = chunkData.slice(186, 188);\n    const severeH = chunkData.slice(217, 219);\n\n    const middleLat = [activeM, minorM, severeM];\n    const highLat = [activeH, minorH, severeH];\n\n    setMiddleLatitude(middleLat);\n    setHighLatitude(highLat);\n  };\n\n  useEffect(() => {\n    getAuroraForecast(location.lat, location.lng);\n  }, [location]);\n\n  return (\n    <>\n      <div className=\"aurora-forecast\">\n        <h1>Aurora Forecast</h1>\n        <Row className=\"current-aurora\">\n          <Col>\n            <h4>BZ</h4>\n            <div className=\"gauge-chart\">\n              <ReactSpeedometer\n                needleHeightRatio={0.8}\n                needleColor=\"#9ba3a0\"\n                maxValue={20}\n                customSegmentStops={[-20, -15, -10, 0, 20]}\n                segmentColors={['#FF471A', '#F6961E', '#ECDB23', '#6AD72D']}\n                minValue={-20}\n                value={parseInt(info.bz)}\n                width={250}\n                height={200}\n              />\n            </div>\n          </Col>\n          <Col>\n            <h4>Density</h4>\n            <div className=\"gauge-chart\">\n              <ReactSpeedometer\n                needleHeightRatio={0.8}\n                needleColor=\"#9ba3a0\"\n                maxValue={20}\n                minValue={0}\n                customSegmentStops={[0, 4, 10, 15, 20]}\n                segmentColors={['#6AD72D', '#ECDB23', '#F6961E', '#FF471A']}\n                value={\n                  parseFloat(info.density) > 20 ? 20 : parseFloat(info.density)\n                }\n                width={250}\n                height={200}\n              />\n            </div>\n          </Col>\n          <Col>\n            <h4>Speed</h4>\n            <div className=\"gauge-chart\">\n              <ReactSpeedometer\n                needleHeightRatio={0.8}\n                needleColor=\"#9ba3a0\"\n                minValue={200}\n                customSegmentStops={[200, 350, 500, 700, 1000]}\n                segmentColors={['#6AD72D', '#ECDB23', '#F6961E', '#FF471A']}\n                value={parseInt(info.speed)}\n                width={250}\n                height={200}\n              />\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h4>Current Kp</h4>\n            <div className=\"gauge-chart\">\n              <ReactSpeedometer\n                needleHeightRatio={0.8}\n                needleColor=\"#9ba3a0\"\n                maxValue={10}\n                segments={5}\n                // startColor=\"limegreen\"\n                // endColor=\"red\"\n                segmentColors={[\n                  '#6AD72D',\n                  '#AEE228',\n                  '#ECDB23',\n                  '#F6961E',\n                  '#FF471A',\n                ]}\n                value={parseInt(info.kp)}\n                width={250}\n                height={200}\n              />\n            </div>\n          </Col>\n          <Col>\n            <h4>Kp 1 hour</h4>\n            <div className=\"gauge-chart\">\n              <ReactSpeedometer\n                needleHeightRatio={0.8}\n                needleColor=\"#9ba3a0\"\n                maxValue={10}\n                segments={5}\n                // startColor=\"limegreen\"\n                // endColor=\"red\"\n                segmentColors={[\n                  '#6AD72D',\n                  '#AEE228',\n                  '#ECDB23',\n                  '#F6961E',\n                  '#FF471A',\n                ]}\n                value={parseInt(info.kp1hour)}\n                width={250}\n                height={200}\n              />\n            </div>\n          </Col>\n          <Col>\n            <h4>Kp 4 hours</h4>\n            <div className=\"gauge-chart\">\n              <ReactSpeedometer\n                needleHeightRatio={0.8}\n                needleColor=\"#9ba3a0\"\n                maxValue={10}\n                segments={5}\n                // startColor=\"limegreen\"\n                // endColor=\"red\"\n                segmentColors={[\n                  '#6AD72D',\n                  '#AEE228',\n                  '#ECDB23',\n                  '#F6961E',\n                  '#FF471A',\n                ]}\n                value={parseInt(info.kp4hour)}\n                width={250}\n                height={200}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <h4>Probability</h4>\n\n        <Row>\n          <Col>\n            <h5>Local</h5>\n            <label style={{ color: probability.colour }}>\n              {probability.value}%\n            </label>\n          </Col>\n          <Col>\n            <h5>High latitude</h5>\n            <h6>Active &nbsp; &nbsp;&nbsp;{highLatitude[0]}%</h6>\n            <h6>Minor &nbsp;&nbsp;&nbsp;&nbsp;{highLatitude[1]}%</h6>\n            <h6>Severe &nbsp;&nbsp;&nbsp;{highLatitude[2]}%</h6>\n          </Col>\n          <Col>\n            <h5>Middle latitude</h5>\n            <h6>Active &nbsp; &nbsp;&nbsp;{middleLatitude[0]}%</h6>\n            <h6>Minor &nbsp;&nbsp;&nbsp;&nbsp;{middleLatitude[1]}%</h6>\n            <h6>Severe &nbsp;&nbsp;&nbsp;{middleLatitude[2]}%</h6>\n          </Col>\n        </Row>\n        <div className=\"threedays_block\">\n          <h4>Three Day Kp Forecast</h4>\n\n          <Row>\n            <Col>\n              {firstday.map(first => {\n                return <GenerateTime key={first.start} time={first} />;\n              })}\n            </Col>\n            <Col>\n              {secondDay.map(second => {\n                return <GenerateTime key={second.start} time={second} />;\n              })}\n            </Col>\n            <Col>\n              {thirdDay.map(third => {\n                return <GenerateTime key={third.start} time={third} />;\n              })}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default Aurora;\n","import axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button, Form, Input, Label } from 'reactstrap';\nimport Weather from '../components/weather/Weather';\nimport { useDispatch } from 'react-redux';\nimport { add } from '../store';\nimport Aurora from '../components/aurora/Aurora';\n\nconst Forecast = React.memo(({ position }) => {\n  const [location, setLocation] = useState(position);\n  const [city, setCity] = useState('');\n\n  const resetValue = useRef(null);\n  const page = 'Forecast';\n  const dispatch = useDispatch();\n  console.log('cityname ===>', city);\n  const OPEN_CAGE_API = process.env.REACT_APP_OPENCAGE_API_KEY;\n  const OPENWEATHER_API = process.env.REACT_APP_OPENWEATHER_API_KEY;\n\n  const getCityLocation = async () => {\n    console.log('city===>', city.toLowerCase());\n    console.log('api ===>', OPEN_CAGE_API);\n    try {\n      const location = await axios.get(\n        `https://api.opencagedata.com/geocode/v1/json?q=${city}&key=${OPEN_CAGE_API}`\n      );\n\n      console.log('location ===>', location);\n\n      // get city's lat, lng\n      const {\n        geometry: { lat, lng },\n      } = location.data.results.find(\n        result => result.components.city.toLowerCase() === city.toLowerCase()\n      );\n\n      setLocation({ lat: lat, lng: lng });\n    } catch (error) {\n      alert(\"Can't find city at all!\");\n    }\n  };\n\n  const getCityName = async () => {\n    const {\n      data: [{ name }],\n    } = await axios.get(\n      `http://api.openweathermap.org/geo/1.0/reverse?lat=${location.lat}&lon=${location.lng}&limit=1&appid=${OPENWEATHER_API}`\n    );\n\n    // take City name out from data\n    // const {\n    //   data: [{ name }],\n    // } = data;\n\n    setCity(name);\n  };\n\n  const searchCityName = e => {\n    const {\n      target: { value },\n    } = e;\n    setCity(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log('wanted city name ==>', city);\n    getCityLocation();\n    resetValue.current.value = '';\n  };\n\n  useEffect(() => {\n    // getAuroraForecast(location.lat, location.lng);\n    getCityName();\n    dispatch(add(page));\n  }, [location]);\n\n  return (\n    <>\n      <div className=\"search-form\">\n        <Form onSubmit={onSubmit} style={{ width: '300px' }}>\n          <div className=\"search\">\n            <Label>\n              <b>Find Location</b>\n            </Label>\n            <FontAwesomeIcon icon={faMapMarkerAlt} className=\"search-icon\" />\n            <Input\n              id=\"search\"\n              name=\"search\"\n              onChange={searchCityName}\n              placeholder={city}\n              innerRef={resetValue}\n            />\n          </div>\n\n          <Button className=\"search-button\">Search</Button>\n        </Form>\n      </div>\n\n      <Weather location={location} />\n\n      <Aurora location={location} />\n    </>\n  );\n});\n\nexport default Forecast;\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst firebaseInstance = firebase;\r\nexport default firebaseInstance;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from 'reactstrap';\r\nimport firebaseInstance, { authService } from '../fbInstance';\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    let data;\r\n    try {\r\n      if (newAccount) {\r\n        //Create Account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // Login\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleHandler = () => setNewAccount(!newAccount);\r\n  const onSocialClick = async e => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'facebook') {\r\n      provider = new firebaseInstance.auth.FacebookAuthProvider();\r\n    }\r\n\r\n    try {\r\n      const data = await authService.signInWithPopup(provider);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col sm=\"12\" md={{ size: 4, offset: 4 }} className=\"login\">\r\n        <Card>\r\n          <CardHeader id=\"card-header\">\r\n            <strong>Login</strong>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Form onSubmit={onSubmit}>\r\n              {error ? <Alert color=\"danger\">{error}</Alert> : ''}\r\n              <FormGroup>\r\n                <Label for=\"title\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  className=\"form-control mb-2\"\r\n                  required\r\n                  onChange={onChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"title\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  className=\"form-control\"\r\n                  required\r\n                  onChange={onChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <Button color=\"success\" block className=\"mt-4\">\r\n                {newAccount ? 'Create Account' : 'Login'}\r\n              </Button>\r\n            </Form>\r\n            <span onClick={toggleHandler}>\r\n              {newAccount ? 'Sign In' : 'Create Account'}\r\n            </span>\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Button\r\n              block\r\n              name=\"google\"\r\n              className=\"mt-4\"\r\n              onClick={onSocialClick}\r\n            >\r\n              Continue with Google\r\n            </Button>\r\n            <Button\r\n              block\r\n              name=\"facebook\"\r\n              className=\"mb-4\"\r\n              onClick={onSocialClick}\r\n            >\r\n              Continue with Facebook\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","export default {\n  styles: [\n    {\n      featureType: 'all',\n      elementType: 'geometry',\n      stylers: [\n        {\n          color: '#202c3e',\n        },\n      ],\n    },\n    {\n      featureType: 'all',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          gamma: 0.01,\n        },\n        {\n          lightness: 20,\n        },\n        {\n          weight: '1.39',\n        },\n        {\n          color: '#ffffff',\n        },\n      ],\n    },\n    {\n      featureType: 'all',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          weight: '0.96',\n        },\n        {\n          saturation: '9',\n        },\n        {\n          visibility: 'on',\n        },\n        {\n          color: '#000000',\n        },\n      ],\n    },\n    {\n      featureType: 'all',\n      elementType: 'labels.icon',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape',\n      elementType: 'geometry',\n      stylers: [\n        {\n          lightness: 30,\n        },\n        {\n          saturation: '9',\n        },\n        {\n          color: '#29446b',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'geometry',\n      stylers: [\n        {\n          saturation: 20,\n        },\n      ],\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'geometry',\n      stylers: [\n        {\n          lightness: 20,\n        },\n        {\n          saturation: -20,\n        },\n      ],\n    },\n    {\n      featureType: 'road',\n      elementType: 'geometry',\n      stylers: [\n        {\n          lightness: 10,\n        },\n        {\n          saturation: -30,\n        },\n      ],\n    },\n    {\n      featureType: 'road',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          color: '#193a55',\n        },\n      ],\n    },\n    {\n      featureType: 'road',\n      elementType: 'geometry.stroke',\n      stylers: [\n        {\n          saturation: 25,\n        },\n        {\n          lightness: 25,\n        },\n        {\n          weight: '0.01',\n        },\n      ],\n    },\n    {\n      featureType: 'water',\n      elementType: 'all',\n      stylers: [\n        {\n          lightness: -20,\n        },\n      ],\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin } from '@fortawesome/free-solid-svg-icons';\n\nconst Marker = ({ text }) => {\n  const [visiable, setVisiable] = useState(false);\n  const info = () => setVisiable(!visiable);\n\n  return (\n    <>\n      <div onMouseEnter={info} onMouseLeave={info}>\n        <FontAwesomeIcon color=\"red\" icon={faMapPin} size=\"3x\" />\n        {visiable ? <span style={{ color: 'white' }}>{text}</span> : null}\n      </div>\n    </>\n  );\n};\n\nexport default Marker;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport mapStyles from '../assets/mapStyles';\nimport AnyReactComponent from '../components/Marker';\nimport { useDispatch } from 'react-redux';\nimport { add } from '../store';\n\nconst GOOGLE_API = process.env.REACT_APP_GOOGLE_API_KEY2;\n\nconst BestLocations = ({ center }) => {\n  const [location, setLocation] = useState([]);\n  const page = 'Best Locations';\n  const dispatch = useDispatch();\n\n  let arrayLocation = [];\n\n  const getBestLocations = async () => {\n    const locations = await axios.get(\n      'https://api.auroras.live/v1/?type=locations'\n    );\n\n    for (let i = 0; i < Object.keys(locations.data).length - 1; i++) {\n      arrayLocation = [...arrayLocation, locations.data[i]];\n    }\n\n    setLocation(arrayLocation);\n  };\n\n  const data = location.map(place => ({\n    id: place.id,\n    lat: place.lat,\n    lng: place.long,\n    info: place.description,\n  }));\n\n  console.log(data);\n\n  useEffect(() => {\n    getBestLocations();\n    dispatch(add(page));\n  }, []);\n\n  return (\n    <>\n      <h3>Best Locations</h3>\n\n      <div style={{ height: '70vh', width: '100%', marginTop: '50px' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: GOOGLE_API, libraries: ['visualization'] }}\n          defaultCenter={center}\n          defaultZoom={1}\n          options={mapStyles}\n        >\n          {data.map(location => (\n            <AnyReactComponent\n              key={location.id}\n              lat={location.lat}\n              lng={location.lng}\n              text={location.info}\n            />\n          ))}\n        </GoogleMapReact>\n      </div>\n    </>\n  );\n};\n\nexport default BestLocations;\n","import React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport mapStyles from '../assets/mapStyles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { add } from '../store';\n\nconst GOOGLE_API = process.env.REACT_APP_GOOGLE_API_KEY1;\n\nconst AuroraMap = ({ center }) => {\n  const [aurora, setAurora] = useState([]);\n  const page = 'Aurora Map';\n  const dispatch = useDispatch();\n\n  const AnyReactComponent = () => (\n    <FontAwesomeIcon icon={faMapMarkerAlt} size=\"3x\" />\n  );\n\n  const getAuroraMap = async () => {\n    const data = await axios.get(\n      'https://services.swpc.noaa.gov/json/ovation_aurora_latest.json '\n    );\n\n    console.log(data);\n\n    // Api에서 받은 것(용량이 너무큼)을 필터를 거쳐 다시 state로 저장\n\n    setAurora(\n      data.data.coordinates\n        .map(location => {\n          let temp = location[0];\n          location[0] = location[1];\n          location[1] = temp;\n          return [location[0], location[1], location[2]];\n        })\n        .filter(\n          coordinates =>\n            (coordinates[0] > 1 || coordinates[0] < -1) && coordinates[2] > 0\n        )\n    );\n  };\n\n  const data = aurora.map(place => ({\n    lat: place[0],\n    lng: place[1],\n    weight: place[2],\n  }));\n\n  const heatmapData = {\n    positions: data,\n    options: {\n      radius: 40,\n      opacity: 0.5,\n    },\n  };\n\n  useEffect(() => {\n    getAuroraMap();\n    dispatch(add(page));\n  }, []);\n\n  return (\n    <>\n      <h3>Aurora Map</h3>\n\n      <div style={{ height: '70vh', width: '100%', marginTop: '50px' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: GOOGLE_API, libraries: ['visualization'] }}\n          defaultCenter={center}\n          defaultZoom={4}\n          heatmap={heatmapData}\n          options={mapStyles}\n        >\n          <AnyReactComponent lat={center.lat} lng={center.lng} />\n        </GoogleMapReact>\n      </div>\n    </>\n  );\n};\n\nexport default AuroraMap;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { add } from '../store';\n\nconst AuroraMaxLive = () => {\n  const [img, setImage] = useState(\n    `https://auroramax.phys.ucalgary.ca/recent/recent_720p.jpg?${new Date().getTime()}`\n  );\n  const page = 'AuroraMax Live';\n  const dispatch = useDispatch();\n  console.log(img, 'image');\n\n  const getAuroraMaxLive = () => {\n    let d = new Date().getTime();\n    let data = `https://auroramax.phys.ucalgary.ca/recent/recent_720p.jpg?${d}`;\n    setImage(data);\n  };\n\n  useEffect(() => {\n    setInterval(() => getAuroraMaxLive(), 10000);\n    dispatch(add(page));\n    return () => {\n      clearInterval();\n    };\n  }, []);\n\n  return (\n    <>\n      <div>\n        <h3>AuroraMax Live</h3>\n        <div className=\"aurora-live\" style={{ marginTop: '50px' }}>\n          <img alt=\"\" id=\"aurora\" src={img} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuroraMaxLive;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Col, Row } from 'reactstrap';\n\nconst Header = () => {\n  const { page } = useSelector(state => state);\n\n  return (\n    <div id=\"page-header\" className=\"mb-3\">\n      <Row>\n        <Col md=\"6\" sm=\"auto\" className=\"text-center m-auto\">\n          <h1>{page}</h1>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Collapse,\n  Container,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Form,\n  Nav,\n  Navbar,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\nimport { authService } from '../fbInstance';\n\nconst Navigation = ({ isLoggedIn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const history = useHistory();\n\n  console.log(isLoggedIn, '네비게이션에서');\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const mouseOn = () => setDropdownOpen(prevState => !prevState);\n\n  const onLogout = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  return (\n    <Navbar color=\"dark\" dark expand=\"lg\" className=\"sticky-top\">\n      <Container>\n        <Link to=\"/\" className=\"text-white text-decoration-none blog-name\">\n          <h2 style={{ fontWeight: 'bold' }}>Aurora World</h2>\n        </Link>\n        <NavbarToggler onClick={handleToggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav\n            className=\"ml-auto d-felx justify-content-around\"\n            navbar\n            style={{ fontWeight: 'bold' }}\n          >\n            <NavItem>\n              <Form className=\"col pr-3 p-1\">\n                <NavLink>\n                  <Link to=\"/aurora-forecast\" className=\"text-decoration-none\">\n                    Forecast\n                  </Link>\n                </NavLink>\n              </Form>\n            </NavItem>\n            <NavItem>\n              <Form className=\"col pr-3 p-1\">\n                <NavLink>\n                  <Link to=\"/bestlocations\" className=\"text-decoration-none\">\n                    Best Locations\n                  </Link>\n                </NavLink>\n              </Form>\n            </NavItem>\n            <NavItem>\n              <Form className=\"col pr-3 p-1\">\n                <NavLink>\n                  <Link to=\"/auroramap\" className=\"text-decoration-none\">\n                    Aurora Map\n                  </Link>\n                </NavLink>\n              </Form>\n            </NavItem>\n            <NavItem>\n              <Form className=\"col pr-3 p-1\">\n                <div className=\"drop-menu\">\n                  <Dropdown nav isOpen={dropdownOpen}>\n                    <DropdownToggle\n                      id=\"toggle\"\n                      nav\n                      caret\n                      onMouseEnter={mouseOn}\n                      onMouseLeave={mouseOn}\n                    >\n                      Observatory\n                    </DropdownToggle>\n                    <DropdownMenu onMouseEnter={mouseOn} onMouseLeave={mouseOn}>\n                      <DropdownItem>\n                        <Link to=\"/live\" className=\"text-decoration-none\">\n                          AuroraMax Live\n                        </Link>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <Link to=\"/replay\" className=\"text-decoration-none\">\n                          AuroraMax Replay\n                        </Link>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </div>\n              </Form>\n            </NavItem>\n            {isLoggedIn ? (\n              <NavItem>\n                <Form className=\"col p-1\">\n                  <NavLink>\n                    <Link\n                      onClick={onLogout}\n                      to=\"#\"\n                      className=\"text-decoration-none\"\n                    >\n                      Logout\n                    </Link>\n                  </NavLink>\n                </Form>\n              </NavItem>\n            ) : (\n              ''\n            )}\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React, { useEffect, useState, useRef } from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { add } from '../store';\n\nconst AuroraMaxReplay = () => {\n  const [video, setVideo] = useState('');\n  const [lastDay, setLastDay] = useState('');\n  const page = 'AuroraMax Replay';\n  const dispatch = useDispatch();\n\n  const initialVideo = () => {\n    const now_date = moment().format('YYYY-MM-DD HH:mm:ss');\n    const currentYear = now_date.substring(0, 4);\n    const currentMonth = now_date.substring(5, 7);\n    let currentDay = now_date.substring(8, 10) - 1;\n    const month = ['01', '03', '05', '07', '08', '10', '12'];\n\n    if (currentDay < 10) {\n      currentDay = `0${currentDay}`;\n    }\n\n    if (currentDay === '00') {\n      if (month.some(month => month === currentMonth)) {\n        currentDay = '31';\n      } else if (currentMonth === '02') {\n        currentDay = '28';\n      } else {\n        currentDay = '30';\n      }\n    }\n\n    const lastDate = `${currentYear}-${currentMonth}-${currentDay}`;\n    console.log(lastDate);\n    setLastDay(lastDate);\n    console.log(lastDay, 'lastday');\n\n    const data = `https://data.phys.ucalgary.ca/sort_by_project/AuroraMAX/rt-movies/mp4/${currentYear}/${currentMonth}/${currentDay}/auroramaxHD_${currentYear}${currentMonth}${currentDay}_720p.mp4`;\n\n    setVideo(data);\n\n    if (\n      currentMonth === '05' ||\n      currentMonth === '06' ||\n      currentMonth === '07' ||\n      currentMonth === '08'\n    ) {\n      alert('No videos in May, June, July, early August');\n    }\n  };\n\n  const getDay = e => {\n    e.preventDefault();\n    const chooseDate = e.target.value;\n    const year = chooseDate.substring(0, 4);\n    const month = chooseDate.substring(5, 7);\n    const day = chooseDate.substring(8, 10);\n    getVideo(year, month, day);\n  };\n\n  const getVideo = (year, month, day) => {\n    const data = `https://data.phys.ucalgary.ca/sort_by_project/AuroraMAX/rt-movies/mp4/${year}/${month}/${day}/auroramaxHD_${year}${month}${day}_720p.mp4`;\n    setVideo(data);\n  };\n\n  useEffect(() => {\n    initialVideo();\n    dispatch(add(page));\n  }, []);\n  return (\n    <>\n      <h3>AuroraMax Replay</h3>\n      <form onChange={getDay}>\n        <label\n          style={{ fontWeight: 'bold', fontSize: '20px', marginTop: '30px' }}\n        >\n          Choose a date: &nbsp;\n        </label>\n        <input type=\"date\" name=\"date\" min=\"2012-09-10\" max={lastDay} />\n      </form>\n      <div className=\"video-detail col-md-12 mt-5 pb-5\">\n        <div className=\"embed-responsive embed-responsive-16by9\">\n          <iframe className=\"embed-responsive-item\" id=\"video\" src={video} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuroraMaxReplay;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Forecast from '../routes/Forecast';\nimport Auth from '../routes/Auth';\nimport { Container } from 'reactstrap';\nimport BestLocations from '../routes/BestLocations';\nimport AuroraMap from '../routes/AuroraMap';\nimport AuroraMaxLive from '../routes/AuroraMaxLive';\nimport Header from './Header';\nimport Navigation from './Navigation';\nimport AuroraMaxReplay from '../routes/AuroraMaxReplay';\n\nconst AppRouter = ({ isLoggedIn, location }) => {\n  const withProps = (Component, props) => {\n    return matchProps => {\n      return <Component {...props} {...matchProps} />;\n    };\n  };\n\n  return (\n    <>\n      <Navigation isLoggedIn={isLoggedIn} />\n      <Header />\n      <Container id=\"main-body\">\n        <Switch>\n          {isLoggedIn ? (\n            <>\n              <Route\n                path=\"/aurora-forecast\"\n                exact\n                component={withProps(Forecast, { position: location })}\n              />\n              <Route\n                path=\"/bestlocations\"\n                exact\n                component={withProps(BestLocations, { center: location })}\n              />\n              <Route\n                path=\"/auroramap\"\n                exact\n                component={withProps(AuroraMap, { center: location })}\n              />\n              <Route path=\"/live\" exact component={AuroraMaxLive} />\n              <Route path=\"/replay\" exact component={AuroraMaxReplay} />\n            </>\n          ) : (\n            <>\n              <Route path=\"*\" exact component={Auth} />\n            </>\n          )}\n        </Switch>\n      </Container>\n    </>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst Footer = () => {\n  const thisYear = () => {\n    const year = new Date().getFullYear();\n    return year;\n  };\n\n  return (\n    <div id=\"main-footer\" className=\"text-center p-4\">\n      <Row>\n        <Col>\n          <p>\n            Copyright &copy; <span>{thisYear()}</span> Aurora World\n          </p>\n          <h6>Powered by Auroras.live, AuroraMax, OpenWeather</h6>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport { authService } from '../fbInstance';\nimport Footer from './Footer';\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currLocation, setCurrLocation] = useState({\n    lat: '',\n    lng: '',\n  });\n\n  const currentLocation = () => {\n    try {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          coords: { latitude, longitude },\n        } = position;\n        setCurrLocation({ lat: latitude, lng: longitude });\n      });\n    } catch (error) {\n      alert(\"Can't find your location!\");\n    }\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      console.log(user);\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n\n    currentLocation();\n  }, []);\n\n  return (\n    <>\n      <div style={{ backgroundColor: '#020101' }}>\n        {init ? (\n          <AppRouter isLoggedIn={isLoggedIn} location={currLocation} />\n        ) : (\n          'Initializing....'\n        )}\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/scss/base.scss';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}